[2020-03-24 11:38:55,347] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-03-24 11:39:54,007] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-03-24 11:39:54,008] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-03-24 11:39:54,543] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 6 and epoch zk version is now 6 (kafka.controller.KafkaController)
[2020-03-24 11:39:54,544] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-03-24 11:39:54,555] DEBUG [Controller id=0] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-03-24 11:39:54,565] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-03-24 11:39:54,625] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-03-24 11:39:54,644] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-03-24 11:39:54,838] INFO [Controller id=1] Initialized broker epochs cache: Map(0 -> 549, 1 -> 550) (kafka.controller.KafkaController)
[2020-03-24 11:39:55,247] DEBUG [Controller id=1] Register BrokerModifications handler for Set(0, 1) (kafka.controller.KafkaController)
[2020-03-24 11:39:56,541] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-03-24 11:39:56,592] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-03-24 11:39:56,620] INFO [Controller id=1] Currently active brokers in the cluster: Set(0, 1) (kafka.controller.KafkaController)
[2020-03-24 11:39:56,621] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-03-24 11:39:56,624] INFO [Controller id=1] Current list of topics in the cluster: Set(nse-eod-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2020-03-24 11:39:56,625] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-03-24 11:39:56,658] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-03-24 11:39:56,659] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-03-24 11:39:56,668] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-03-24 11:39:56,669] INFO [Controller id=1] List of topics ineligible for deletion: nse-eod-topic,__consumer_offsets (kafka.controller.KafkaController)
[2020-03-24 11:39:56,670] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-03-24 11:39:56,671] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(nse-eod-topic, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2020-03-24 11:39:56,673] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-03-24 11:39:56,721] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-03-24 11:39:56,780] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-24 11:39:56,805] INFO [RequestSendThread controllerId=1] Controller 1 connected to DELL-PC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-24 11:39:56,805] INFO [RequestSendThread controllerId=1] Controller 1 connected to DELL-PC:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-24 11:39:56,886] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-24 11:39:57,293] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=4,Replica=1] -> OnlineReplica, [Topic=nse-eod-topic,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=nse-eod-topic,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=nse-eod-topic,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OfflineReplica, [Topic=nse-eod-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=nse-eod-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=nse-eod-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=nse-eod-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=nse-eod-topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=nse-eod-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=nse-eod-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica, [Topic=nse-eod-topic,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-03-24 11:39:57,295] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-03-24 11:39:57,391] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-03-24 11:39:57,908] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(nse-eod-topic-1 -> OnlinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, nse-eod-topic-4 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, nse-eod-topic-0 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, nse-eod-topic-3 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, nse-eod-topic-2 -> OnlinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-03-24 11:39:57,909] INFO [Controller id=1] Ready to serve as the new controller with epoch 6 (kafka.controller.KafkaController)
[2020-03-24 11:39:57,940] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-03-24 11:39:57,941] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-03-24 11:39:57,941] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-03-24 11:39:57,942] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-03-24 11:39:57,945] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-03-24 11:39:57,986] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-03-24 11:40:02,055] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-03-24 11:40:02,056] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-03-24 11:40:02,067] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-03-24 11:40:02,095] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-03-24 11:40:02,103] INFO [RequestSendThread controllerId=1] Controller 1 connected to DELL-PC:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-24 11:40:02,270] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2020-03-24 11:40:02,304] INFO [Controller id=1] Updated broker epochs cache: Map(0 -> 549, 1 -> 550, 2 -> 577) (kafka.controller.KafkaController)
[2020-03-24 11:40:02,326] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-03-24 11:40:02,373] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-03-24 11:40:02,989] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-24 11:40:02,990] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-24 11:40:02,999] DEBUG [Controller id=1] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), nse-eod-topic-0 -> List(0, 2, 1), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), nse-eod-topic-3 -> List(0, 1, 2), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-4 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), nse-eod-topic-1 -> List(1, 0, 2), __consumer_offsets-37 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-11 -> List(2), nse-eod-topic-2 -> List(2, 1, 0), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-24 11:40:03,010] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-24 11:40:03,013] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 11:40:03,013] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-24 11:40:03,013] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 11:40:03,193] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(nse-eod-topic-2 -> List(2, 1, 0)) (kafka.controller.KafkaController)
[2020-03-24 11:40:03,193] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-24 11:40:09,758] DEBUG [Controller id=1] Sending MetadataRequest to Brokers: List(0, 1, 2) for TopicPartitions: ArrayBuffer(nse-eod-topic-0, nse-eod-topic-2, nse-eod-topic-3) (kafka.controller.KafkaController)
[2020-03-24 11:40:10,531] DEBUG [Controller id=1] Sending MetadataRequest to Brokers: List(0, 1, 2) for TopicPartitions: ArrayBuffer(nse-eod-topic-1, nse-eod-topic-4) (kafka.controller.KafkaController)
[2020-03-24 11:45:03,226] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-24 11:45:03,226] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-24 11:45:03,241] DEBUG [Controller id=1] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), nse-eod-topic-0 -> List(0, 2, 1), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), nse-eod-topic-3 -> List(0, 1, 2), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-4 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), nse-eod-topic-1 -> List(1, 0, 2), __consumer_offsets-37 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-11 -> List(2), nse-eod-topic-2 -> List(2, 1, 0), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-24 11:45:03,241] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-24 11:45:03,241] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 11:45:03,241] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-24 11:45:03,241] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 11:45:03,241] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(nse-eod-topic-2 -> List(2, 1, 0)) (kafka.controller.KafkaController)
[2020-03-24 11:45:03,241] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-24 11:50:03,263] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-24 11:50:03,263] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-24 11:50:03,263] DEBUG [Controller id=1] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), nse-eod-topic-0 -> List(0, 2, 1), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), nse-eod-topic-3 -> List(0, 1, 2), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-4 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), nse-eod-topic-1 -> List(1, 0, 2), __consumer_offsets-37 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-11 -> List(2), nse-eod-topic-2 -> List(2, 1, 0), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-24 11:50:03,263] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-24 11:50:03,263] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 11:50:03,263] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-24 11:50:03,263] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 11:50:03,263] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(nse-eod-topic-2 -> List(2, 1, 0)) (kafka.controller.KafkaController)
[2020-03-24 11:50:03,263] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-24 11:51:45,207] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-03-24 11:52:34,130] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-03-24 11:52:34,524] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2020-03-24 11:52:34,525] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-03-24 11:52:34,669] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-03-24 11:52:34,703] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-03-24 11:52:34,744] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-03-24 11:52:34,902] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 24) (kafka.controller.KafkaController)
[2020-03-24 11:52:34,958] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-03-24 11:52:35,013] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-03-24 11:52:35,151] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-03-24 11:52:35,152] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-03-24 11:52:35,155] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-03-24 11:52:35,156] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-03-24 11:52:35,161] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-03-24 11:52:35,209] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-03-24 11:52:35,210] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-03-24 11:52:35,211] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-03-24 11:52:35,213] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-03-24 11:52:35,214] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-03-24 11:52:35,260] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-03-24 11:52:35,264] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-24 11:52:35,280] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-24 11:52:35,282] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2020-03-24 11:52:35,283] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-03-24 11:52:35,285] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-03-24 11:52:35,306] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-24 11:52:35,369] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2020-03-24 11:52:35,370] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-03-24 11:52:35,447] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-03-24 11:52:35,448] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-03-24 11:52:35,449] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-03-24 11:52:35,450] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-03-24 11:52:35,453] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-03-24 11:52:35,548] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-03-24 11:52:39,809] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2020-03-24 11:52:39,810] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-03-24 11:52:39,905] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2020-03-24 11:52:39,888] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-03-24 11:52:39,913] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-24 11:52:39,916] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2020-03-24 11:52:39,946] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 24, 1 -> 43) (kafka.controller.KafkaController)
[2020-03-24 11:52:40,013] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-03-24 11:52:40,072] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-03-24 11:52:40,601] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-24 11:52:40,602] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-24 11:52:40,606] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-03-24 11:52:43,838] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-03-24 11:52:43,838] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-03-24 11:52:43,849] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-03-24 11:52:43,850] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-03-24 11:52:43,852] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2020-03-24 11:52:43,857] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-24 11:52:43,865] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 24, 1 -> 43, 2 -> 59) (kafka.controller.KafkaController)
[2020-03-24 11:52:44,011] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-03-24 11:52:44,064] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-03-24 11:53:18,438] INFO [Controller id=0] New topics: [Set(nse-eod-topic)], deleted topics: [Set()], new partition replica assignment [HashMap(nse-eod-topic-1 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), nse-eod-topic-2 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), nse-eod-topic-3 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), nse-eod-topic-4 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), nse-eod-topic-0 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-03-24 11:53:18,466] INFO [Controller id=0] New partition creation callback for nse-eod-topic-1,nse-eod-topic-2,nse-eod-topic-3,nse-eod-topic-4,nse-eod-topic-0 (kafka.controller.KafkaController)
[2020-03-24 11:53:29,478] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-03-24 11:53:29,478] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2020-03-24 11:57:40,615] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-24 11:57:40,615] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-24 11:57:40,620] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), nse-eod-topic-2 -> List(0, 1, 2), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-37 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), nse-eod-topic-3 -> List(1, 0, 2), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-0 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), nse-eod-topic-4 -> List(2, 1, 0), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), nse-eod-topic-1 -> List(2, 0, 1), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-11 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-24 11:57:40,624] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-24 11:57:40,627] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 11:57:40,627] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-24 11:57:40,628] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 11:57:40,628] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-24 11:57:40,628] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:02:40,637] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-24 12:02:40,638] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-24 12:02:40,645] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), nse-eod-topic-2 -> List(0, 1, 2), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-37 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), nse-eod-topic-3 -> List(1, 0, 2), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-0 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), nse-eod-topic-4 -> List(2, 1, 0), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), nse-eod-topic-1 -> List(2, 0, 1), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-11 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-24 12:02:40,645] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:02:40,645] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:02:40,646] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:02:40,646] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:02:40,646] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:02:40,646] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:07:40,654] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-24 12:07:40,654] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-24 12:07:40,658] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), nse-eod-topic-2 -> List(0, 1, 2), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-37 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), nse-eod-topic-3 -> List(1, 0, 2), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-0 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), nse-eod-topic-4 -> List(2, 1, 0), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), nse-eod-topic-1 -> List(2, 0, 1), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-11 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-24 12:07:40,658] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:07:40,658] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:07:40,659] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:07:40,659] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:07:40,659] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:07:40,659] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:12:40,668] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-24 12:12:40,668] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-24 12:12:40,671] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), nse-eod-topic-2 -> List(0, 1, 2), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-37 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), nse-eod-topic-3 -> List(1, 0, 2), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-0 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), nse-eod-topic-4 -> List(2, 1, 0), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), nse-eod-topic-1 -> List(2, 0, 1), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-11 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-24 12:12:40,671] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:12:40,671] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:12:40,671] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:12:40,672] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:12:40,672] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:12:40,672] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:17:40,680] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-24 12:17:40,680] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-24 12:17:40,682] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), nse-eod-topic-2 -> List(0, 1, 2), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-37 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), nse-eod-topic-3 -> List(1, 0, 2), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-0 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), nse-eod-topic-4 -> List(2, 1, 0), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), nse-eod-topic-1 -> List(2, 0, 1), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-11 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-24 12:17:40,683] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:17:40,683] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:17:40,683] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:17:40,683] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:17:40,683] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:17:40,683] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:22:40,692] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-24 12:22:40,692] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-24 12:22:40,694] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), nse-eod-topic-2 -> List(0, 1, 2), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-37 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), nse-eod-topic-3 -> List(1, 0, 2), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-0 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), nse-eod-topic-4 -> List(2, 1, 0), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), nse-eod-topic-1 -> List(2, 0, 1), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-11 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-24 12:22:40,694] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:22:40,695] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:22:40,695] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:22:40,695] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:22:40,695] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:22:40,695] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:27:40,704] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-24 12:27:40,704] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-24 12:27:40,708] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), nse-eod-topic-2 -> List(0, 1, 2), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-37 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), nse-eod-topic-3 -> List(1, 0, 2), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-0 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), nse-eod-topic-4 -> List(2, 1, 0), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), nse-eod-topic-1 -> List(2, 0, 1), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-11 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-24 12:27:40,708] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:27:40,708] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:27:40,708] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:27:40,709] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:27:40,709] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:27:40,709] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:32:40,717] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-24 12:32:40,717] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-24 12:32:40,718] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), nse-eod-topic-2 -> List(0, 1, 2), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-37 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), nse-eod-topic-3 -> List(1, 0, 2), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-0 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), nse-eod-topic-4 -> List(2, 1, 0), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), nse-eod-topic-1 -> List(2, 0, 1), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-11 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-24 12:32:40,719] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:32:40,719] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:32:40,719] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:32:40,719] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:32:40,720] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:32:40,720] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:37:40,728] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-24 12:37:40,728] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-24 12:37:40,729] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), nse-eod-topic-2 -> List(0, 1, 2), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-37 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), nse-eod-topic-3 -> List(1, 0, 2), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-0 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), nse-eod-topic-4 -> List(2, 1, 0), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), nse-eod-topic-1 -> List(2, 0, 1), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-11 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-24 12:37:40,730] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:37:40,730] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:37:40,730] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:37:40,730] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:37:40,730] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:37:40,730] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:42:40,734] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-24 12:42:40,734] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-24 12:42:40,735] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), nse-eod-topic-2 -> List(0, 1, 2), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-37 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), nse-eod-topic-3 -> List(1, 0, 2), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-0 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), nse-eod-topic-4 -> List(2, 1, 0), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), nse-eod-topic-1 -> List(2, 0, 1), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-11 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-24 12:42:40,735] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:42:40,735] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:42:40,736] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:42:40,736] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-24 12:42:40,736] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-24 12:42:40,736] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
