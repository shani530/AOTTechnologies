[2020-03-31 14:58:44,046] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-03-31 15:02:54,062] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-03-31 15:02:54,158] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 13 and epoch zk version is now 13 (kafka.controller.KafkaController)
[2020-03-31 15:02:54,158] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-03-31 15:02:54,179] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-03-31 15:02:54,224] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-03-31 15:02:54,229] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-03-31 15:02:54,272] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 3014) (kafka.controller.KafkaController)
[2020-03-31 15:02:54,366] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-03-31 15:02:54,890] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-03-31 15:02:54,947] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2020-03-31 15:02:54,948] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-03-31 15:02:54,949] INFO [Controller id=1] Current list of topics in the cluster: HashSet(__transaction_state, sync-hello-producer-new, pos, sync-hello-producer, __consumer_offsets, callback-hello-producer, valid-pos, hello-producer-topic-1, nse-eod-topic, hello-producer-topic, hello-producer-topic-2, invalid-pos) (kafka.controller.KafkaController)
[2020-03-31 15:02:54,950] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-03-31 15:02:55,214] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-03-31 15:02:55,304] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-03-31 15:02:55,306] INFO [Controller id=1] List of topics ineligible for deletion: __transaction_state,sync-hello-producer-new,pos,sync-hello-producer,__consumer_offsets,callback-hello-producer,valid-pos,hello-producer-topic-1,nse-eod-topic,hello-producer-topic,hello-producer-topic-2,invalid-pos (kafka.controller.KafkaController)
[2020-03-31 15:02:55,306] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-03-31 15:02:55,308] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__transaction_state, sync-hello-producer-new, pos, sync-hello-producer, __consumer_offsets, callback-hello-producer, valid-pos, hello-producer-topic-1, nse-eod-topic, hello-producer-topic, hello-producer-topic-2, invalid-pos) (kafka.controller.TopicDeletionManager)
[2020-03-31 15:02:55,309] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-03-31 15:02:55,334] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 15:02:55,364] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 15:02:55,485] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 15:02:55,489] INFO [RequestSendThread controllerId=1] Controller 1 connected to DELL-PC:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-31 15:02:56,300] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=hello-producer-topic-2,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__transaction_state,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=pos,Partition=1,Replica=1] -> OnlineReplica, [Topic=__transaction_state,Partition=38,Replica=1] -> OnlineReplica, [Topic=__transaction_state,Partition=41,Replica=1] -> OnlineReplica, [Topic=hello-producer-topic-2,Partition=3,Replica=0] -> OfflineReplica, [Topic=hello-producer-topic-2,Partition=2,Replica=0] -> OfflineReplica, [Topic=hello-producer-topic-2,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__transaction_state,Partition=7,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=pos,Partition=2,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=2,Replica=0] -> OfflineReplica, [Topic=nse-eod-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=nse-eod-topic,Partition=3,Replica=1] -> OnlineReplica, [Topic=__transaction_state,Partition=34,Replica=0] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OfflineReplica, [Topic=__transaction_state,Partition=25,Replica=0] -> OfflineReplica, [Topic=__transaction_state,Partition=12,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=1,Replica=0] -> OfflineReplica, [Topic=nse-eod-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=2,Replica=1] -> OnlineReplica, [Topic=sync-hello-producer-new,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=33,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=42,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=43,Replica=0] -> OfflineReplica, [Topic=__transaction_state,Partition=1,Replica=0] -> OfflineReplica, [Topic=invalid-pos,Partition=1,Replica=2] -> OfflineReplica, [Topic=sync-hello-producer,Partition=0,Replica=1] -> OnlineReplica, [Topic=invalid-pos,Partition=0,Replica=0] -> OfflineReplica, [Topic=__transaction_state,Partition=37,Replica=0] -> OfflineReplica, [Topic=sync-hello-producer,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=0,Replica=2] -> OfflineReplica, [Topic=invalid-pos,Partition=0,Replica=2] -> OfflineReplica, [Topic=nse-eod-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=__transaction_state,Partition=6,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=49,Replica=0] -> OfflineReplica, [Topic=nse-eod-topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=valid-pos,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OfflineReplica, [Topic=valid-pos,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=3,Replica=0] -> OfflineReplica, [Topic=__transaction_state,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OfflineReplica, [Topic=pos,Partition=2,Replica=0] -> OfflineReplica, [Topic=nse-eod-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__transaction_state,Partition=3,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-2,Partition=0,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=13,Replica=0] -> OfflineReplica, [Topic=__transaction_state,Partition=39,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=0,Replica=1] -> OnlineReplica, [Topic=__transaction_state,Partition=23,Replica=1] -> OnlineReplica, [Topic=__transaction_state,Partition=11,Replica=1] -> OnlineReplica, [Topic=hello-producer-topic-2,Partition=1,Replica=0] -> OfflineReplica, [Topic=__transaction_state,Partition=28,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica, [Topic=pos,Partition=0,Replica=2] -> OfflineReplica, [Topic=sync-hello-producer,Partition=0,Replica=2] -> OfflineReplica, [Topic=invalid-pos,Partition=2,Replica=1] -> OnlineReplica, [Topic=__transaction_state,Partition=36,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-2,Partition=0,Replica=0] -> OfflineReplica, [Topic=hello-producer-topic-2,Partition=3,Replica=1] -> OnlineReplica, [Topic=__transaction_state,Partition=22,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=invalid-pos,Partition=2,Replica=0] -> OfflineReplica, [Topic=hello-producer-topic-2,Partition=3,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=16,Replica=0] -> OfflineReplica, [Topic=valid-pos,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OfflineReplica, [Topic=pos,Partition=2,Replica=1] -> OnlineReplica, [Topic=hello-producer-topic-1,Partition=0,Replica=0] -> OfflineReplica, [Topic=nse-eod-topic,Partition=4,Replica=1] -> OnlineReplica, [Topic=__transaction_state,Partition=47,Replica=1] -> OnlineReplica, [Topic=nse-eod-topic,Partition=3,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=46,Replica=0] -> OfflineReplica, [Topic=__transaction_state,Partition=15,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__transaction_state,Partition=24,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OfflineReplica, [Topic=__transaction_state,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=hello-producer-topic-2,Partition=0,Replica=1] -> OnlineReplica, [Topic=__transaction_state,Partition=45,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-2,Partition=2,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=14,Replica=1] -> OnlineReplica, [Topic=__transaction_state,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OfflineReplica, [Topic=nse-eod-topic,Partition=2,Replica=1] -> OnlineReplica, [Topic=__transaction_state,Partition=9,Replica=2] -> OfflineReplica, [Topic=pos,Partition=0,Replica=1] -> OnlineReplica, [Topic=__transaction_state,Partition=5,Replica=1] -> OnlineReplica, [Topic=sync-hello-producer-new,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__transaction_state,Partition=29,Replica=1] -> OnlineReplica, [Topic=sync-hello-producer-new,Partition=1,Replica=1] -> OnlineReplica, [Topic=valid-pos,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OfflineReplica, [Topic=nse-eod-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=4,Replica=1] -> OnlineReplica, [Topic=invalid-pos,Partition=2,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=invalid-pos,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=2,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=30,Replica=2] -> OfflineReplica, [Topic=pos,Partition=1,Replica=0] -> OfflineReplica, [Topic=sync-hello-producer-new,Partition=1,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=18,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=32,Replica=1] -> OnlineReplica, [Topic=sync-hello-producer-new,Partition=0,Replica=0] -> OfflineReplica, [Topic=__transaction_state,Partition=19,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OfflineReplica, [Topic=__transaction_state,Partition=21,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=nse-eod-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=nse-eod-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=48,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-2,Partition=4,Replica=1] -> OnlineReplica, [Topic=__transaction_state,Partition=26,Replica=1] -> OnlineReplica, [Topic=nse-eod-topic,Partition=2,Replica=0] -> OfflineReplica, [Topic=__transaction_state,Partition=27,Replica=2] -> OfflineReplica, [Topic=pos,Partition=0,Replica=0] -> OfflineReplica, [Topic=sync-hello-producer-new,Partition=0,Replica=1] -> OnlineReplica, [Topic=hello-producer-topic-2,Partition=4,Replica=0] -> OfflineReplica, [Topic=invalid-pos,Partition=1,Replica=0] -> OfflineReplica, [Topic=__transaction_state,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=2,Replica=1] -> OnlineReplica, [Topic=hello-producer-topic-1,Partition=3,Replica=1] -> OnlineReplica, [Topic=hello-producer-topic-1,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OfflineReplica, [Topic=valid-pos,Partition=2,Replica=1] -> OnlineReplica, [Topic=__transaction_state,Partition=31,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=valid-pos,Partition=2,Replica=0] -> OfflineReplica, [Topic=pos,Partition=1,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-2,Partition=1,Replica=2] -> OfflineReplica, [Topic=callback-hello-producer,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=valid-pos,Partition=2,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=1,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=10,Replica=0] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=1,Replica=1] -> OnlineReplica, [Topic=nse-eod-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=valid-pos,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=valid-pos,Partition=0,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-2,Partition=4,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=4,Replica=2] -> OfflineReplica, [Topic=invalid-pos,Partition=1,Replica=1] -> OnlineReplica, [Topic=nse-eod-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__transaction_state,Partition=40,Replica=0] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 15:02:56,303] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 15:02:56,314] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 15:02:56,961] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(hello-producer-topic-2-3 -> OnlinePartition, __transaction_state-42 -> OfflinePartition, nse-eod-topic-1 -> OnlinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, hello-producer-topic-1-3 -> OnlinePartition, valid-pos-0 -> OnlinePartition, __transaction_state-17 -> OnlinePartition, __transaction_state-34 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __transaction_state-9 -> OfflinePartition, __transaction_state-26 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, sync-hello-producer-new-0 -> OnlinePartition, pos-0 -> OnlinePartition, __transaction_state-1 -> OfflinePartition, __transaction_state-18 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, valid-pos-1 -> OnlinePartition, invalid-pos-0 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, hello-producer-topic-1-4 -> OnlinePartition, hello-producer-topic-2-4 -> OnlinePartition, __consumer_offsets-12 -> OfflinePartition, __transaction_state-16 -> OfflinePartition, __transaction_state-49 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __transaction_state-8 -> OnlinePartition, __transaction_state-41 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, pos-1 -> OnlinePartition, __transaction_state-0 -> OfflinePartition, __transaction_state-33 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __transaction_state-25 -> OfflinePartition, nse-eod-topic-0 -> OnlinePartition, __consumer_offsets-15 -> OfflinePartition, invalid-pos-1 -> OnlinePartition, __consumer_offsets-48 -> OfflinePartition, nse-eod-topic-3 -> OnlinePartition, __transaction_state-15 -> OfflinePartition, __transaction_state-48 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __transaction_state-7 -> OfflinePartition, __transaction_state-40 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, pos-2 -> OnlinePartition, __transaction_state-32 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __transaction_state-24 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, nse-eod-topic-2 -> OnlinePartition, __consumer_offsets-14 -> OfflinePartition, invalid-pos-2 -> OnlinePartition, __transaction_state-14 -> OnlinePartition, __transaction_state-47 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __transaction_state-6 -> OfflinePartition, __transaction_state-39 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, sync-hello-producer-new-1 -> OnlinePartition, __transaction_state-31 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __transaction_state-23 -> OnlinePartition, __transaction_state-13 -> OfflinePartition, __transaction_state-46 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __transaction_state-5 -> OnlinePartition, __transaction_state-38 -> OnlinePartition, __consumer_offsets-17 -> OfflinePartition, __transaction_state-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __transaction_state-22 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __transaction_state-12 -> OfflinePartition, __transaction_state-45 -> OfflinePartition, nse-eod-topic-4 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, hello-producer-topic-1-0 -> OnlinePartition, hello-producer-topic-2-0 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __transaction_state-4 -> OfflinePartition, __transaction_state-37 -> OfflinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __transaction_state-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OfflinePartition, __transaction_state-21 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, valid-pos-2 -> OnlinePartition, hello-producer-topic-1-1 -> OnlinePartition, __transaction_state-11 -> OnlinePartition, __transaction_state-44 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, hello-producer-topic-2-1 -> OnlinePartition, __transaction_state-3 -> OfflinePartition, __transaction_state-36 -> OfflinePartition, __consumer_offsets-19 -> OnlinePartition, callback-hello-producer-0 -> OfflinePartition, hello-producer-topic-0 -> OfflinePartition, __transaction_state-28 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, sync-hello-producer-0 -> OnlinePartition, __transaction_state-20 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, hello-producer-topic-1-2 -> OnlinePartition, __transaction_state-10 -> OfflinePartition, hello-producer-topic-2-2 -> OnlinePartition, __transaction_state-43 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __transaction_state-2 -> OnlinePartition, __transaction_state-35 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __transaction_state-27 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __transaction_state-19 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 15:02:56,962] INFO [Controller id=1] Ready to serve as the new controller with epoch 13 (kafka.controller.KafkaController)
[2020-03-31 15:02:56,973] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-03-31 15:02:56,974] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-03-31 15:02:56,975] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-03-31 15:02:56,975] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-03-31 15:02:56,978] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-03-31 15:02:57,013] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-03-31 15:02:58,062] INFO [Controller id=1] Newly added brokers: 0, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2020-03-31 15:02:58,064] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-03-31 15:02:58,080] INFO [Controller id=1] New broker startup callback for 0 (kafka.controller.KafkaController)
[2020-03-31 15:02:58,091] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-03-31 15:02:58,118] INFO [RequestSendThread controllerId=1] Controller 1 connected to DELL-PC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-31 15:02:58,270] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-03-31 15:02:58,406] DEBUG [Controller id=1] Register BrokerModifications handler for List(0) (kafka.controller.KafkaController)
[2020-03-31 15:02:58,410] DEBUG [Controller id=0] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-03-31 15:02:58,426] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 3014, 0 -> 3159) (kafka.controller.KafkaController)
[2020-03-31 15:03:02,017] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 15:03:02,018] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 15:03:02,033] DEBUG [Controller id=1] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-21 -> List(0), __transaction_state-7 -> List(0), __transaction_state-28 -> List(0), __transaction_state-37 -> List(0), __consumer_offsets-36 -> List(0), valid-pos-0 -> List(0, 2, 1), __transaction_state-10 -> List(0), __consumer_offsets-48 -> List(0), __transaction_state-25 -> List(0), nse-eod-topic-2 -> List(0, 1, 2), __transaction_state-19 -> List(0), __consumer_offsets-30 -> List(0), __transaction_state-31 -> List(0), __transaction_state-46 -> List(0), __consumer_offsets-27 -> List(0), sync-hello-producer-0 -> List(0, 1, 2), __consumer_offsets-9 -> List(0), __transaction_state-49 -> List(0), invalid-pos-1 -> List(0, 1, 2), __consumer_offsets-33 -> List(0), __transaction_state-13 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __transaction_state-22 -> List(0), __transaction_state-43 -> List(0), __transaction_state-4 -> List(0), __consumer_offsets-6 -> List(0), hello-producer-topic-1-2 -> List(0, 1, 2), __transaction_state-16 -> List(0), __consumer_offsets-0 -> List(0), hello-producer-topic-2-0 -> List(0, 1, 2), pos-0 -> List(0, 2, 1), hello-producer-topic-2-3 -> List(0, 2, 1), sync-hello-producer-new-1 -> List(0, 1, 2), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __transaction_state-40 -> List(0), __consumer_offsets-45 -> List(0), __transaction_state-1 -> List(0), __transaction_state-34 -> List(0), callback-hello-producer-0 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), invalid-pos-2 -> List(1, 2, 0), __transaction_state-32 -> List(1), __transaction_state-17 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-43 -> List(1), nse-eod-topic-3 -> List(1, 0, 2), __consumer_offsets-1 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), pos-1 -> List(1, 0, 2), nse-eod-topic-0 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), valid-pos-1 -> List(1, 0, 2), __transaction_state-2 -> List(1), __transaction_state-20 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), __consumer_offsets-31 -> List(1), __transaction_state-29 -> List(1), __consumer_offsets-37 -> List(1), __transaction_state-38 -> List(1), __transaction_state-14 -> List(1), __transaction_state-44 -> List(1), hello-producer-topic-1-0 -> List(1, 2, 0), __transaction_state-23 -> List(1), __transaction_state-47 -> List(1), __consumer_offsets-13 -> List(1), __transaction_state-26 -> List(1), __transaction_state-5 -> List(1), __transaction_state-8 -> List(1), hello-producer-topic-2-1 -> List(1, 2, 0), hello-producer-topic-1-3 -> List(1, 0, 2), __transaction_state-11 -> List(1), __transaction_state-41 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-10 -> List(1), hello-producer-topic-2-4 -> List(1, 0, 2), __transaction_state-35 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__transaction_state-42 -> List(2), valid-pos-2 -> List(2, 1, 0), __transaction_state-48 -> List(2), __consumer_offsets-47 -> List(2), __transaction_state-6 -> List(2), __transaction_state-9 -> List(2), __consumer_offsets-11 -> List(2), __transaction_state-18 -> List(2), __consumer_offsets-32 -> List(2), __transaction_state-45 -> List(2), sync-hello-producer-new-0 -> List(2, 0, 1), __transaction_state-15 -> List(2), __transaction_state-12 -> List(2), __consumer_offsets-8 -> List(2), nse-eod-topic-4 -> List(2, 1, 0), pos-2 -> List(2, 1, 0), __consumer_offsets-35 -> List(2), __transaction_state-24 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __transaction_state-0 -> List(2), hello-producer-topic-0 -> List(2), __transaction_state-3 -> List(2), __transaction_state-21 -> List(2), __transaction_state-39 -> List(2), nse-eod-topic-1 -> List(2, 0, 1), __transaction_state-30 -> List(2), __transaction_state-33 -> List(2), __consumer_offsets-38 -> List(2), hello-producer-topic-2-2 -> List(2, 0, 1), __consumer_offsets-17 -> List(2), hello-producer-topic-1-1 -> List(2, 0, 1), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), hello-producer-topic-1-4 -> List(2, 1, 0), __transaction_state-36 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2), __transaction_state-27 -> List(2), __consumer_offsets-29 -> List(2), invalid-pos-0 -> List(2, 0, 1))) (kafka.controller.KafkaController)
[2020-03-31 15:03:02,039] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap(valid-pos-0 -> List(0, 2, 1), nse-eod-topic-2 -> List(0, 1, 2), hello-producer-topic-1-2 -> List(0, 1, 2), sync-hello-producer-new-1 -> List(0, 1, 2), sync-hello-producer-0 -> List(0, 1, 2), invalid-pos-1 -> List(0, 1, 2), hello-producer-topic-2-0 -> List(0, 1, 2), pos-0 -> List(0, 2, 1), hello-producer-topic-2-3 -> List(0, 2, 1)) (kafka.controller.KafkaController)
[2020-03-31 15:03:02,042] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.20454545454545456 (kafka.controller.KafkaController)
[2020-03-31 15:03:02,059] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions valid-pos-0,nse-eod-topic-2,hello-producer-topic-1-2,sync-hello-producer-new-1,sync-hello-producer-0,invalid-pos-1,hello-producer-topic-2-0,pos-0,hello-producer-topic-2-3 triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-03-31 15:03:02,084] INFO [Controller id=1] Partition valid-pos-0 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2020-03-31 15:03:02,084] INFO [Controller id=1] Partition nse-eod-topic-2 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2020-03-31 15:03:02,084] INFO [Controller id=1] Partition hello-producer-topic-1-2 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2020-03-31 15:03:02,084] INFO [Controller id=1] Partition sync-hello-producer-new-1 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2020-03-31 15:03:02,084] INFO [Controller id=1] Partition sync-hello-producer-0 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2020-03-31 15:03:02,084] INFO [Controller id=1] Partition invalid-pos-1 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2020-03-31 15:03:02,084] INFO [Controller id=1] Partition hello-producer-topic-2-0 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2020-03-31 15:03:02,084] INFO [Controller id=1] Partition pos-0 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2020-03-31 15:03:02,084] INFO [Controller id=1] Partition hello-producer-topic-2-3 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2020-03-31 15:03:02,085] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:03:02,085] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:03:02,086] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__transaction_state-42 -> List(2), valid-pos-2 -> List(2, 1, 0), __transaction_state-48 -> List(2), __consumer_offsets-47 -> List(2), __transaction_state-6 -> List(2), __transaction_state-9 -> List(2), __consumer_offsets-11 -> List(2), __transaction_state-18 -> List(2), __consumer_offsets-32 -> List(2), __transaction_state-45 -> List(2), sync-hello-producer-new-0 -> List(2, 0, 1), __transaction_state-15 -> List(2), __transaction_state-12 -> List(2), __consumer_offsets-8 -> List(2), nse-eod-topic-4 -> List(2, 1, 0), pos-2 -> List(2, 1, 0), __consumer_offsets-35 -> List(2), __transaction_state-24 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __transaction_state-0 -> List(2), hello-producer-topic-0 -> List(2), __transaction_state-3 -> List(2), __transaction_state-21 -> List(2), __transaction_state-39 -> List(2), nse-eod-topic-1 -> List(2, 0, 1), __transaction_state-30 -> List(2), __transaction_state-33 -> List(2), __consumer_offsets-38 -> List(2), hello-producer-topic-2-2 -> List(2, 0, 1), __consumer_offsets-17 -> List(2), hello-producer-topic-1-1 -> List(2, 0, 1), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), hello-producer-topic-1-4 -> List(2, 1, 0), __transaction_state-36 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2), __transaction_state-27 -> List(2), __consumer_offsets-29 -> List(2), invalid-pos-0 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2020-03-31 15:03:02,086] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2020-03-31 15:03:02,086] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-03-31 15:03:05,631] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-03-31 15:03:05,631] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-03-31 15:03:05,646] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-03-31 15:03:05,660] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-03-31 15:03:05,665] INFO [RequestSendThread controllerId=1] Controller 1 connected to DELL-PC:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-31 15:03:05,764] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2020-03-31 15:03:05,793] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 3014, 0 -> 3159, 2 -> 3232) (kafka.controller.KafkaController)
[2020-03-31 15:03:05,826] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-03-31 15:03:05,882] DEBUG [Controller id=1] Sending MetadataRequest to Brokers: List(1, 0, 2) for TopicPartitions: ArrayBuffer(sync-hello-producer-new-0, valid-pos-2, valid-pos-1, nse-eod-topic-1, nse-eod-topic-2, hello-producer-topic-1-0, hello-producer-topic-1-2, hello-producer-topic-1-4, invalid-pos-0, hello-producer-topic-2-4, sync-hello-producer-0, invalid-pos-1, nse-eod-topic-4, pos-1, pos-2, nse-eod-topic-0, valid-pos-0, invalid-pos-2, hello-producer-topic-2-2, hello-producer-topic-1-1, hello-producer-topic-2-1, hello-producer-topic-1-3, hello-producer-topic-2-0, pos-0, hello-producer-topic-2-3, sync-hello-producer-new-1, nse-eod-topic-3) (kafka.controller.KafkaController)
[2020-03-31 15:03:05,889] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-03-31 15:03:12,780] DEBUG [Controller id=1] Sending MetadataRequest to Brokers: List(1, 0, 2) for TopicPartitions: ArrayBuffer(valid-pos-0, nse-eod-topic-2, hello-producer-topic-1-2, sync-hello-producer-new-1, sync-hello-producer-0, invalid-pos-1, hello-producer-topic-2-0, pos-0, hello-producer-topic-2-3) (kafka.controller.KafkaController)
[2020-03-31 15:03:13,318] DEBUG [Controller id=1] Sending MetadataRequest to Brokers: List(1, 0, 2) for TopicPartitions: ArrayBuffer(sync-hello-producer-new-0, valid-pos-2, valid-pos-1, nse-eod-topic-1, invalid-pos-2, hello-producer-topic-1-0, hello-producer-topic-1-4, nse-eod-topic-3, invalid-pos-0, hello-producer-topic-2-4, nse-eod-topic-4, pos-1, pos-2, nse-eod-topic-0, hello-producer-topic-2-2, hello-producer-topic-1-1, hello-producer-topic-2-1, hello-producer-topic-1-3) (kafka.controller.KafkaController)
[2020-03-31 15:03:30,358] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 14 and epoch zk version is now 14 (kafka.controller.KafkaController)
[2020-03-31 15:03:30,359] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2020-03-31 15:03:30,363] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-03-31 15:03:30,367] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-03-31 15:03:30,371] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2020-03-31 15:03:30,382] INFO [Controller id=2] Initialized broker epochs cache: Map(0 -> 3159, 2 -> 3232) (kafka.controller.KafkaController)
[2020-03-31 15:03:30,416] DEBUG [Controller id=2] Register BrokerModifications handler for Set(0, 2) (kafka.controller.KafkaController)
[2020-03-31 15:03:30,503] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-03-31 15:03:30,516] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-03-31 15:03:30,525] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-03-31 15:03:30,525] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-03-31 15:03:30,526] INFO [Controller id=2] Currently active brokers in the cluster: Set(0, 2) (kafka.controller.KafkaController)
[2020-03-31 15:03:30,527] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-03-31 15:03:30,527] INFO [Controller id=2] Current list of topics in the cluster: HashSet(__transaction_state, sync-hello-producer-new, pos, sync-hello-producer, __consumer_offsets, callback-hello-producer, valid-pos, hello-producer-topic-1, nse-eod-topic, hello-producer-topic, hello-producer-topic-2, invalid-pos) (kafka.controller.KafkaController)
[2020-03-31 15:03:30,528] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-03-31 15:03:30,538] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-03-31 15:03:30,539] INFO [Controller id=2] List of topics ineligible for deletion: __transaction_state,nse-eod-topic,sync-hello-producer-new,pos,sync-hello-producer,__consumer_offsets,valid-pos,hello-producer-topic-1,hello-producer-topic-2,invalid-pos (kafka.controller.KafkaController)
[2020-03-31 15:03:30,539] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-03-31 15:03:30,540] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__transaction_state, nse-eod-topic, sync-hello-producer-new, pos, sync-hello-producer, __consumer_offsets, valid-pos, hello-producer-topic-1, hello-producer-topic-2, invalid-pos) (kafka.controller.TopicDeletionManager)
[2020-03-31 15:03:30,540] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2020-03-31 15:03:30,581] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 15:03:30,582] INFO [RequestSendThread controllerId=2] Controller 2 connected to DELL-PC:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-31 15:03:30,596] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 15:03:30,668] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 15:03:30,898] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap([Topic=hello-producer-topic-2,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OfflineReplica, [Topic=pos,Partition=1,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=38,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=41,Replica=1] -> OfflineReplica, [Topic=hello-producer-topic-2,Partition=3,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic-2,Partition=2,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic-2,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OnlineReplica, [Topic=__transaction_state,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OnlineReplica, [Topic=pos,Partition=2,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic-1,Partition=2,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OfflineReplica, [Topic=nse-eod-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=34,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic-1,Partition=3,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=25,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=12,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic-1,Partition=1,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic-1,Partition=2,Replica=1] -> OfflineReplica, [Topic=sync-hello-producer-new,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OnlineReplica, [Topic=__transaction_state,Partition=33,Replica=2] -> OnlineReplica, [Topic=__transaction_state,Partition=42,Replica=2] -> OnlineReplica, [Topic=__transaction_state,Partition=43,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=1,Replica=0] -> OnlineReplica, [Topic=invalid-pos,Partition=1,Replica=2] -> OnlineReplica, [Topic=sync-hello-producer,Partition=0,Replica=1] -> OfflineReplica, [Topic=invalid-pos,Partition=0,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=37,Replica=0] -> OnlineReplica, [Topic=sync-hello-producer,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic-1,Partition=0,Replica=2] -> OnlineReplica, [Topic=invalid-pos,Partition=0,Replica=2] -> OnlineReplica, [Topic=nse-eod-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=6,Replica=2] -> OnlineReplica, [Topic=__transaction_state,Partition=49,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=valid-pos,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OnlineReplica, [Topic=valid-pos,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic-1,Partition=3,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=8,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=pos,Partition=2,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=3,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic-2,Partition=0,Replica=2] -> OnlineReplica, [Topic=__transaction_state,Partition=13,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=39,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic-1,Partition=0,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=23,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=11,Replica=1] -> OfflineReplica, [Topic=hello-producer-topic-2,Partition=1,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OfflineReplica, [Topic=pos,Partition=0,Replica=2] -> OnlineReplica, [Topic=sync-hello-producer,Partition=0,Replica=2] -> OnlineReplica, [Topic=invalid-pos,Partition=2,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=36,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic-2,Partition=0,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic-2,Partition=3,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OfflineReplica, [Topic=invalid-pos,Partition=2,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic-2,Partition=3,Replica=2] -> OnlineReplica, [Topic=__transaction_state,Partition=16,Replica=0] -> OnlineReplica, [Topic=valid-pos,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=pos,Partition=2,Replica=1] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=0,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=47,Replica=1] -> OfflineReplica, [Topic=nse-eod-topic,Partition=3,Replica=2] -> OnlineReplica, [Topic=__transaction_state,Partition=46,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=15,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=24,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OfflineReplica, [Topic=hello-producer-topic-2,Partition=0,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=45,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic-2,Partition=2,Replica=2] -> OnlineReplica, [Topic=__transaction_state,Partition=14,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=9,Replica=2] -> OnlineReplica, [Topic=pos,Partition=0,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=5,Replica=1] -> OfflineReplica, [Topic=sync-hello-producer-new,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=29,Replica=1] -> OfflineReplica, [Topic=sync-hello-producer-new,Partition=1,Replica=1] -> OfflineReplica, [Topic=valid-pos,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OnlineReplica, [Topic=__transaction_state,Partition=20,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OnlineReplica, [Topic=nse-eod-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic-1,Partition=4,Replica=1] -> OfflineReplica, [Topic=invalid-pos,Partition=2,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=invalid-pos,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic-1,Partition=2,Replica=2] -> OnlineReplica, [Topic=__transaction_state,Partition=30,Replica=2] -> OnlineReplica, [Topic=pos,Partition=1,Replica=0] -> OnlineReplica, [Topic=sync-hello-producer-new,Partition=1,Replica=2] -> OnlineReplica, [Topic=__transaction_state,Partition=18,Replica=2] -> OnlineReplica, [Topic=__transaction_state,Partition=32,Replica=1] -> OfflineReplica, [Topic=sync-hello-producer-new,Partition=0,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=21,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OfflineReplica, [Topic=nse-eod-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=nse-eod-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=__transaction_state,Partition=48,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic-2,Partition=4,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=26,Replica=1] -> OfflineReplica, [Topic=nse-eod-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=27,Replica=2] -> OnlineReplica, [Topic=pos,Partition=0,Replica=0] -> OnlineReplica, [Topic=sync-hello-producer-new,Partition=0,Replica=1] -> OfflineReplica, [Topic=hello-producer-topic-2,Partition=4,Replica=0] -> OnlineReplica, [Topic=invalid-pos,Partition=1,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=44,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OnlineReplica, [Topic=__transaction_state,Partition=2,Replica=1] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=3,Replica=1] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=valid-pos,Partition=2,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OnlineReplica, [Topic=valid-pos,Partition=2,Replica=0] -> OnlineReplica, [Topic=pos,Partition=1,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic-2,Partition=1,Replica=2] -> OnlineReplica, [Topic=callback-hello-producer,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OnlineReplica, [Topic=valid-pos,Partition=2,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic-1,Partition=1,Replica=2] -> OnlineReplica, [Topic=__transaction_state,Partition=10,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic-1,Partition=1,Replica=1] -> OfflineReplica, [Topic=nse-eod-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=valid-pos,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OfflineReplica, [Topic=valid-pos,Partition=0,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic-2,Partition=4,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic-1,Partition=4,Replica=2] -> OnlineReplica, [Topic=invalid-pos,Partition=1,Replica=1] -> OfflineReplica, [Topic=nse-eod-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=40,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 15:03:30,900] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 15:03:30,912] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 15:03:31,077] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap(hello-producer-topic-2-3 -> OnlinePartition, __transaction_state-42 -> OnlinePartition, nse-eod-topic-1 -> OnlinePartition, __consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, hello-producer-topic-1-3 -> OnlinePartition, valid-pos-0 -> OnlinePartition, __transaction_state-17 -> OfflinePartition, __transaction_state-34 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __transaction_state-9 -> OnlinePartition, __transaction_state-26 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, sync-hello-producer-new-0 -> OnlinePartition, pos-0 -> OnlinePartition, __transaction_state-1 -> OnlinePartition, __transaction_state-18 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, valid-pos-1 -> OnlinePartition, invalid-pos-0 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, hello-producer-topic-1-4 -> OnlinePartition, hello-producer-topic-2-4 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __transaction_state-16 -> OnlinePartition, __transaction_state-49 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __transaction_state-8 -> OfflinePartition, __transaction_state-41 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, pos-1 -> OnlinePartition, __transaction_state-0 -> OnlinePartition, __transaction_state-33 -> OnlinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __transaction_state-25 -> OnlinePartition, nse-eod-topic-0 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, invalid-pos-1 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, nse-eod-topic-3 -> OnlinePartition, __transaction_state-15 -> OnlinePartition, __transaction_state-48 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __transaction_state-7 -> OnlinePartition, __transaction_state-40 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, pos-2 -> OnlinePartition, __transaction_state-32 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __transaction_state-24 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, nse-eod-topic-2 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, invalid-pos-2 -> OnlinePartition, __transaction_state-14 -> OfflinePartition, __transaction_state-47 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __transaction_state-6 -> OnlinePartition, __transaction_state-39 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, sync-hello-producer-new-1 -> OnlinePartition, __transaction_state-31 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __transaction_state-23 -> OfflinePartition, __transaction_state-13 -> OnlinePartition, __transaction_state-46 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __transaction_state-5 -> OfflinePartition, __transaction_state-38 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, __transaction_state-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __transaction_state-22 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __transaction_state-12 -> OnlinePartition, __transaction_state-45 -> OnlinePartition, nse-eod-topic-4 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, hello-producer-topic-1-0 -> OnlinePartition, hello-producer-topic-2-0 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __transaction_state-4 -> OnlinePartition, __transaction_state-37 -> OnlinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __transaction_state-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __transaction_state-21 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, valid-pos-2 -> OnlinePartition, hello-producer-topic-1-1 -> OnlinePartition, __transaction_state-11 -> OfflinePartition, __transaction_state-44 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, hello-producer-topic-2-1 -> OnlinePartition, __transaction_state-3 -> OnlinePartition, __transaction_state-36 -> OnlinePartition, __consumer_offsets-19 -> OfflinePartition, callback-hello-producer-0 -> OnlinePartition, hello-producer-topic-0 -> OnlinePartition, __transaction_state-28 -> OnlinePartition, __consumer_offsets-28 -> OfflinePartition, sync-hello-producer-0 -> OnlinePartition, __transaction_state-20 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, hello-producer-topic-1-2 -> OnlinePartition, __transaction_state-10 -> OnlinePartition, hello-producer-topic-2-2 -> OnlinePartition, __transaction_state-43 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __transaction_state-2 -> OfflinePartition, __transaction_state-35 -> OfflinePartition, __consumer_offsets-18 -> OnlinePartition, __transaction_state-27 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __transaction_state-19 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 15:03:31,078] INFO [Controller id=2] Ready to serve as the new controller with epoch 14 (kafka.controller.KafkaController)
[2020-03-31 15:03:31,090] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-03-31 15:03:31,091] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-03-31 15:03:31,092] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-03-31 15:03:31,093] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-03-31 15:03:31,096] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-03-31 15:03:31,115] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-03-31 15:03:31,581] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker DELL-PC:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to DELL-PC:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-03-31 15:03:32,685] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker DELL-PC:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to DELL-PC:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-03-31 15:03:33,345] INFO [Controller id=2] Newly added brokers: , deleted brokers: 0, bounced brokers: , all live brokers: 2 (kafka.controller.KafkaController)
[2020-03-31 15:03:33,348] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-03-31 15:03:33,349] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker DELL-PC:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
org.apache.kafka.common.errors.DisconnectException: NetworkClient is no longer active, state is CLOSING
[2020-03-31 15:03:33,351] WARN [RequestSendThread controllerId=2] Controller 2 epoch 14 fails to send request (type: UpdateMetadataRequest=, controllerId=2, controllerEpoch=14, brokerEpoch=3159, partitionStates=[], liveBrokers=UpdateMetadataBroker(id=0, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='DELL-PC', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='DELL-PC', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker DELL-PC:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1326)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:277)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.backoff$1(ControllerChannelManager.scala:238)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-03-31 15:03:33,351] TRACE [RequestSendThread controllerId=2] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-03-31 15:03:33,351] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-03-31 15:03:33,352] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-03-31 15:03:33,357] INFO [Controller id=2] Broker failure callback for 0 (kafka.controller.KafkaController)
[2020-03-31 15:03:33,687] DEBUG [Controller id=2] Unregister BrokerModifications handler for List(0) (kafka.controller.KafkaController)
[2020-03-31 15:03:33,690] INFO [Controller id=2] Updated broker epochs cache: Map(2 -> 3232) (kafka.controller.KafkaController)
[2020-03-31 15:05:07,586] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-03-31 15:05:07,673] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 15 and epoch zk version is now 15 (kafka.controller.KafkaController)
[2020-03-31 15:05:07,675] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-03-31 15:05:07,710] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-03-31 15:05:07,766] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-03-31 15:05:07,774] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-03-31 15:05:07,810] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 3460) (kafka.controller.KafkaController)
[2020-03-31 15:05:07,893] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-03-31 15:05:08,178] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-03-31 15:05:08,218] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-03-31 15:05:08,221] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-03-31 15:05:08,222] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-03-31 15:05:08,223] INFO [Controller id=0] Current list of topics in the cluster: HashSet(__transaction_state, sync-hello-producer-new, pos, sync-hello-producer, __consumer_offsets, callback-hello-producer, valid-pos, hello-producer-topic-1, nse-eod-topic, hello-producer-topic, hello-producer-topic-2, invalid-pos) (kafka.controller.KafkaController)
[2020-03-31 15:05:08,224] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-03-31 15:05:08,246] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-03-31 15:05:08,246] INFO [Controller id=0] List of topics ineligible for deletion: __transaction_state,sync-hello-producer-new,pos,sync-hello-producer,__consumer_offsets,valid-pos,hello-producer-topic-1,nse-eod-topic,hello-producer-topic,hello-producer-topic-2,invalid-pos (kafka.controller.KafkaController)
[2020-03-31 15:05:08,247] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-03-31 15:05:08,249] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__transaction_state, sync-hello-producer-new, pos, sync-hello-producer, __consumer_offsets, valid-pos, hello-producer-topic-1, nse-eod-topic, hello-producer-topic, hello-producer-topic-2, invalid-pos) (kafka.controller.TopicDeletionManager)
[2020-03-31 15:05:08,250] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-03-31 15:05:08,282] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 15:05:08,304] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-31 15:05:08,326] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 15:05:08,458] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 15:05:09,211] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=hello-producer-topic-2,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OfflineReplica, [Topic=pos,Partition=1,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=38,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=41,Replica=1] -> OfflineReplica, [Topic=hello-producer-topic-2,Partition=3,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic-2,Partition=2,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic-2,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=pos,Partition=2,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=2,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OfflineReplica, [Topic=nse-eod-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=34,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic-1,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=25,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=12,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=1,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=2,Replica=1] -> OfflineReplica, [Topic=sync-hello-producer-new,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=33,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=42,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=43,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=1,Replica=0] -> OnlineReplica, [Topic=invalid-pos,Partition=1,Replica=2] -> OfflineReplica, [Topic=sync-hello-producer,Partition=0,Replica=1] -> OfflineReplica, [Topic=invalid-pos,Partition=0,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=37,Replica=0] -> OnlineReplica, [Topic=sync-hello-producer,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic-1,Partition=0,Replica=2] -> OfflineReplica, [Topic=invalid-pos,Partition=0,Replica=2] -> OfflineReplica, [Topic=nse-eod-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=6,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=49,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=valid-pos,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OfflineReplica, [Topic=valid-pos,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=3,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=8,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=pos,Partition=2,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=3,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-2,Partition=0,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=13,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=39,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=0,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=23,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=11,Replica=1] -> OfflineReplica, [Topic=hello-producer-topic-2,Partition=1,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OfflineReplica, [Topic=pos,Partition=0,Replica=2] -> OfflineReplica, [Topic=sync-hello-producer,Partition=0,Replica=2] -> OfflineReplica, [Topic=invalid-pos,Partition=2,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=36,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-2,Partition=0,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic-2,Partition=3,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OfflineReplica, [Topic=invalid-pos,Partition=2,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic-2,Partition=3,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=16,Replica=0] -> OnlineReplica, [Topic=valid-pos,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=pos,Partition=2,Replica=1] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=0,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=47,Replica=1] -> OfflineReplica, [Topic=nse-eod-topic,Partition=3,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=46,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=15,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=24,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OfflineReplica, [Topic=hello-producer-topic-2,Partition=0,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=45,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-2,Partition=2,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=14,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=9,Replica=2] -> OfflineReplica, [Topic=pos,Partition=0,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=5,Replica=1] -> OfflineReplica, [Topic=sync-hello-producer-new,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=29,Replica=1] -> OfflineReplica, [Topic=sync-hello-producer-new,Partition=1,Replica=1] -> OfflineReplica, [Topic=valid-pos,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=20,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OfflineReplica, [Topic=nse-eod-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic-1,Partition=4,Replica=1] -> OfflineReplica, [Topic=invalid-pos,Partition=2,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=invalid-pos,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=2,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=30,Replica=2] -> OfflineReplica, [Topic=pos,Partition=1,Replica=0] -> OnlineReplica, [Topic=sync-hello-producer-new,Partition=1,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=18,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=32,Replica=1] -> OfflineReplica, [Topic=sync-hello-producer-new,Partition=0,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=21,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OfflineReplica, [Topic=nse-eod-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=nse-eod-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=48,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-2,Partition=4,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=26,Replica=1] -> OfflineReplica, [Topic=nse-eod-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=27,Replica=2] -> OfflineReplica, [Topic=pos,Partition=0,Replica=0] -> OnlineReplica, [Topic=sync-hello-producer-new,Partition=0,Replica=1] -> OfflineReplica, [Topic=hello-producer-topic-2,Partition=4,Replica=0] -> OnlineReplica, [Topic=invalid-pos,Partition=1,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=44,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=2,Replica=1] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=3,Replica=1] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=valid-pos,Partition=2,Replica=1] -> OfflineReplica, [Topic=__transaction_state,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=valid-pos,Partition=2,Replica=0] -> OnlineReplica, [Topic=pos,Partition=1,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-2,Partition=1,Replica=2] -> OfflineReplica, [Topic=callback-hello-producer,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=valid-pos,Partition=2,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=1,Replica=2] -> OfflineReplica, [Topic=__transaction_state,Partition=10,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic-1,Partition=1,Replica=1] -> OfflineReplica, [Topic=nse-eod-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=valid-pos,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OfflineReplica, [Topic=valid-pos,Partition=0,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-2,Partition=4,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic-1,Partition=4,Replica=2] -> OfflineReplica, [Topic=invalid-pos,Partition=1,Replica=1] -> OfflineReplica, [Topic=nse-eod-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__transaction_state,Partition=40,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 15:05:09,218] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 15:05:09,238] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 15:05:09,608] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(hello-producer-topic-2-3 -> OfflinePartition, __transaction_state-42 -> OfflinePartition, nse-eod-topic-1 -> OfflinePartition, __consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, hello-producer-topic-1-3 -> OfflinePartition, valid-pos-0 -> OfflinePartition, __transaction_state-17 -> OfflinePartition, __transaction_state-34 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __transaction_state-9 -> OfflinePartition, __transaction_state-26 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, sync-hello-producer-new-0 -> OfflinePartition, pos-0 -> OfflinePartition, __transaction_state-1 -> OnlinePartition, __transaction_state-18 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, valid-pos-1 -> OfflinePartition, invalid-pos-0 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, hello-producer-topic-1-4 -> OfflinePartition, hello-producer-topic-2-4 -> OfflinePartition, __consumer_offsets-12 -> OnlinePartition, __transaction_state-16 -> OnlinePartition, __transaction_state-49 -> OnlinePartition, __consumer_offsets-20 -> OfflinePartition, __transaction_state-8 -> OfflinePartition, __transaction_state-41 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, pos-1 -> OfflinePartition, __transaction_state-0 -> OfflinePartition, __transaction_state-33 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __transaction_state-25 -> OnlinePartition, nse-eod-topic-0 -> OfflinePartition, __consumer_offsets-15 -> OnlinePartition, invalid-pos-1 -> OfflinePartition, __consumer_offsets-48 -> OnlinePartition, nse-eod-topic-3 -> OfflinePartition, __transaction_state-15 -> OfflinePartition, __transaction_state-48 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __transaction_state-7 -> OnlinePartition, __transaction_state-40 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, pos-2 -> OfflinePartition, __transaction_state-32 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __transaction_state-24 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, nse-eod-topic-2 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, invalid-pos-2 -> OfflinePartition, __transaction_state-14 -> OfflinePartition, __transaction_state-47 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __transaction_state-6 -> OfflinePartition, __transaction_state-39 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, sync-hello-producer-new-1 -> OfflinePartition, __transaction_state-31 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __transaction_state-23 -> OfflinePartition, __transaction_state-13 -> OnlinePartition, __transaction_state-46 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __transaction_state-5 -> OfflinePartition, __transaction_state-38 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __transaction_state-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __transaction_state-22 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __transaction_state-12 -> OfflinePartition, __transaction_state-45 -> OfflinePartition, nse-eod-topic-4 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, hello-producer-topic-1-0 -> OfflinePartition, hello-producer-topic-2-0 -> OfflinePartition, __consumer_offsets-24 -> OnlinePartition, __transaction_state-4 -> OnlinePartition, __transaction_state-37 -> OnlinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __transaction_state-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __transaction_state-21 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, valid-pos-2 -> OfflinePartition, hello-producer-topic-1-1 -> OfflinePartition, __transaction_state-11 -> OfflinePartition, __transaction_state-44 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, hello-producer-topic-2-1 -> OfflinePartition, __transaction_state-3 -> OfflinePartition, __transaction_state-36 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, callback-hello-producer-0 -> OnlinePartition, hello-producer-topic-0 -> OfflinePartition, __transaction_state-28 -> OnlinePartition, __consumer_offsets-28 -> OfflinePartition, sync-hello-producer-0 -> OfflinePartition, __transaction_state-20 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, hello-producer-topic-1-2 -> OfflinePartition, __transaction_state-10 -> OnlinePartition, hello-producer-topic-2-2 -> OfflinePartition, __transaction_state-43 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __transaction_state-2 -> OfflinePartition, __transaction_state-35 -> OfflinePartition, __consumer_offsets-18 -> OnlinePartition, __transaction_state-27 -> OfflinePartition, __consumer_offsets-27 -> OnlinePartition, __transaction_state-19 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 15:05:09,609] INFO [Controller id=0] Ready to serve as the new controller with epoch 15 (kafka.controller.KafkaController)
[2020-03-31 15:05:09,618] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-03-31 15:05:09,618] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-03-31 15:05:09,619] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-03-31 15:05:09,619] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-03-31 15:05:09,622] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-03-31 15:05:09,678] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-03-31 15:05:14,681] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 15:05:14,681] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 15:05:14,693] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-21 -> List(0), __transaction_state-7 -> List(0), __transaction_state-28 -> List(0), __transaction_state-37 -> List(0), __consumer_offsets-36 -> List(0), valid-pos-0 -> List(0, 2, 1), __transaction_state-10 -> List(0), __consumer_offsets-48 -> List(0), __transaction_state-25 -> List(0), nse-eod-topic-2 -> List(0, 1, 2), __transaction_state-19 -> List(0), __consumer_offsets-30 -> List(0), __transaction_state-31 -> List(0), __transaction_state-46 -> List(0), __consumer_offsets-27 -> List(0), sync-hello-producer-0 -> List(0, 1, 2), __consumer_offsets-9 -> List(0), __transaction_state-49 -> List(0), invalid-pos-1 -> List(0, 1, 2), __consumer_offsets-33 -> List(0), __transaction_state-13 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __transaction_state-22 -> List(0), __transaction_state-43 -> List(0), __transaction_state-4 -> List(0), __consumer_offsets-6 -> List(0), hello-producer-topic-1-2 -> List(0, 1, 2), __transaction_state-16 -> List(0), __consumer_offsets-0 -> List(0), hello-producer-topic-2-0 -> List(0, 1, 2), pos-0 -> List(0, 2, 1), hello-producer-topic-2-3 -> List(0, 2, 1), sync-hello-producer-new-1 -> List(0, 1, 2), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __transaction_state-40 -> List(0), __consumer_offsets-45 -> List(0), __transaction_state-1 -> List(0), __transaction_state-34 -> List(0), callback-hello-producer-0 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), invalid-pos-2 -> List(1, 2, 0), __transaction_state-32 -> List(1), __transaction_state-17 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-43 -> List(1), nse-eod-topic-3 -> List(1, 0, 2), __consumer_offsets-1 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), pos-1 -> List(1, 0, 2), nse-eod-topic-0 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), valid-pos-1 -> List(1, 0, 2), __transaction_state-2 -> List(1), __transaction_state-20 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), __consumer_offsets-31 -> List(1), __transaction_state-29 -> List(1), __consumer_offsets-37 -> List(1), __transaction_state-38 -> List(1), __transaction_state-14 -> List(1), __transaction_state-44 -> List(1), hello-producer-topic-1-0 -> List(1, 2, 0), __transaction_state-23 -> List(1), __transaction_state-47 -> List(1), __consumer_offsets-13 -> List(1), __transaction_state-26 -> List(1), __transaction_state-5 -> List(1), __transaction_state-8 -> List(1), hello-producer-topic-2-1 -> List(1, 2, 0), hello-producer-topic-1-3 -> List(1, 0, 2), __transaction_state-11 -> List(1), __transaction_state-41 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-10 -> List(1), hello-producer-topic-2-4 -> List(1, 0, 2), __transaction_state-35 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__transaction_state-42 -> List(2), valid-pos-2 -> List(2, 1, 0), __transaction_state-48 -> List(2), __consumer_offsets-47 -> List(2), __transaction_state-6 -> List(2), __transaction_state-9 -> List(2), __consumer_offsets-11 -> List(2), __transaction_state-18 -> List(2), __consumer_offsets-32 -> List(2), __transaction_state-45 -> List(2), sync-hello-producer-new-0 -> List(2, 0, 1), __transaction_state-15 -> List(2), __transaction_state-12 -> List(2), __consumer_offsets-8 -> List(2), nse-eod-topic-4 -> List(2, 1, 0), pos-2 -> List(2, 1, 0), __consumer_offsets-35 -> List(2), __transaction_state-24 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __transaction_state-0 -> List(2), hello-producer-topic-0 -> List(2), __transaction_state-3 -> List(2), __transaction_state-21 -> List(2), __transaction_state-39 -> List(2), nse-eod-topic-1 -> List(2, 0, 1), __transaction_state-30 -> List(2), __transaction_state-33 -> List(2), __consumer_offsets-38 -> List(2), hello-producer-topic-2-2 -> List(2, 0, 1), __consumer_offsets-17 -> List(2), hello-producer-topic-1-1 -> List(2, 0, 1), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), hello-producer-topic-1-4 -> List(2, 1, 0), __transaction_state-36 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2), __transaction_state-27 -> List(2), __consumer_offsets-29 -> List(2), invalid-pos-0 -> List(2, 0, 1))) (kafka.controller.KafkaController)
[2020-03-31 15:05:14,696] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap(valid-pos-0 -> List(0, 2, 1), nse-eod-topic-2 -> List(0, 1, 2), hello-producer-topic-1-2 -> List(0, 1, 2), sync-hello-producer-new-1 -> List(0, 1, 2), sync-hello-producer-0 -> List(0, 1, 2), invalid-pos-1 -> List(0, 1, 2), hello-producer-topic-2-0 -> List(0, 1, 2), pos-0 -> List(0, 2, 1), hello-producer-topic-2-3 -> List(0, 2, 1)) (kafka.controller.KafkaController)
[2020-03-31 15:05:14,698] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.20454545454545456 (kafka.controller.KafkaController)
[2020-03-31 15:05:14,710] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions valid-pos-0,nse-eod-topic-2,hello-producer-topic-1-2,sync-hello-producer-new-1,sync-hello-producer-0,invalid-pos-1,hello-producer-topic-2-0,pos-0,hello-producer-topic-2-3 triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-03-31 15:05:14,729] ERROR [Controller id=0] Error completing replica leader election (PREFERRED) for partition valid-pos-0 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition valid-pos-0 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:764)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:1135)
	at scala.collection.immutable.HashMap.foreach(HashMap.scala:1049)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1116)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1144)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-03-31 15:05:14,729] ERROR [Controller id=0] Error completing replica leader election (PREFERRED) for partition nse-eod-topic-2 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition nse-eod-topic-2 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:764)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:1135)
	at scala.collection.immutable.HashMap.foreach(HashMap.scala:1049)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1116)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1144)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-03-31 15:05:14,730] ERROR [Controller id=0] Error completing replica leader election (PREFERRED) for partition hello-producer-topic-1-2 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition hello-producer-topic-1-2 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:764)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:1135)
	at scala.collection.immutable.HashMap.foreach(HashMap.scala:1049)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1116)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1144)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-03-31 15:05:14,730] ERROR [Controller id=0] Error completing replica leader election (PREFERRED) for partition sync-hello-producer-new-1 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition sync-hello-producer-new-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:764)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:1135)
	at scala.collection.immutable.HashMap.foreach(HashMap.scala:1049)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1116)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1144)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-03-31 15:05:14,730] ERROR [Controller id=0] Error completing replica leader election (PREFERRED) for partition sync-hello-producer-0 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition sync-hello-producer-0 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:764)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:1135)
	at scala.collection.immutable.HashMap.foreach(HashMap.scala:1049)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1116)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1144)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-03-31 15:05:14,730] ERROR [Controller id=0] Error completing replica leader election (PREFERRED) for partition invalid-pos-1 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition invalid-pos-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:764)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:1135)
	at scala.collection.immutable.HashMap.foreach(HashMap.scala:1049)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1116)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1144)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-03-31 15:05:14,730] ERROR [Controller id=0] Error completing replica leader election (PREFERRED) for partition hello-producer-topic-2-0 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition hello-producer-topic-2-0 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:764)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:1135)
	at scala.collection.immutable.HashMap.foreach(HashMap.scala:1049)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1116)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1144)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-03-31 15:05:14,730] ERROR [Controller id=0] Error completing replica leader election (PREFERRED) for partition pos-0 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition pos-0 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:764)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:1135)
	at scala.collection.immutable.HashMap.foreach(HashMap.scala:1049)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1116)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1144)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-03-31 15:05:14,730] ERROR [Controller id=0] Error completing replica leader election (PREFERRED) for partition hello-producer-topic-2-3 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition hello-producer-topic-2-3 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:764)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:1135)
	at scala.collection.immutable.HashMap.foreach(HashMap.scala:1049)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1116)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1144)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-03-31 15:05:14,731] WARN [Controller id=0] Partition valid-pos-0 failed to complete preferred replica leader election to 0. Leader is still -1 (kafka.controller.KafkaController)
[2020-03-31 15:05:14,731] WARN [Controller id=0] Partition nse-eod-topic-2 failed to complete preferred replica leader election to 0. Leader is still -1 (kafka.controller.KafkaController)
[2020-03-31 15:05:14,731] WARN [Controller id=0] Partition hello-producer-topic-1-2 failed to complete preferred replica leader election to 0. Leader is still -1 (kafka.controller.KafkaController)
[2020-03-31 15:05:14,731] WARN [Controller id=0] Partition sync-hello-producer-new-1 failed to complete preferred replica leader election to 0. Leader is still -1 (kafka.controller.KafkaController)
[2020-03-31 15:05:14,731] WARN [Controller id=0] Partition sync-hello-producer-0 failed to complete preferred replica leader election to 0. Leader is still -1 (kafka.controller.KafkaController)
[2020-03-31 15:05:14,732] WARN [Controller id=0] Partition invalid-pos-1 failed to complete preferred replica leader election to 0. Leader is still -1 (kafka.controller.KafkaController)
[2020-03-31 15:05:14,732] WARN [Controller id=0] Partition hello-producer-topic-2-0 failed to complete preferred replica leader election to 0. Leader is still -1 (kafka.controller.KafkaController)
[2020-03-31 15:05:14,732] WARN [Controller id=0] Partition pos-0 failed to complete preferred replica leader election to 0. Leader is still -1 (kafka.controller.KafkaController)
[2020-03-31 15:05:14,732] WARN [Controller id=0] Partition hello-producer-topic-2-3 failed to complete preferred replica leader election to 0. Leader is still -1 (kafka.controller.KafkaController)
[2020-03-31 15:05:14,732] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), invalid-pos-2 -> List(1, 2, 0), __transaction_state-32 -> List(1), __transaction_state-17 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-43 -> List(1), nse-eod-topic-3 -> List(1, 0, 2), __consumer_offsets-1 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), pos-1 -> List(1, 0, 2), nse-eod-topic-0 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), valid-pos-1 -> List(1, 0, 2), __transaction_state-2 -> List(1), __transaction_state-20 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), __consumer_offsets-31 -> List(1), __transaction_state-29 -> List(1), __consumer_offsets-37 -> List(1), __transaction_state-38 -> List(1), __transaction_state-14 -> List(1), __transaction_state-44 -> List(1), hello-producer-topic-1-0 -> List(1, 2, 0), __transaction_state-23 -> List(1), __transaction_state-47 -> List(1), __consumer_offsets-13 -> List(1), __transaction_state-26 -> List(1), __transaction_state-5 -> List(1), __transaction_state-8 -> List(1), hello-producer-topic-2-1 -> List(1, 2, 0), hello-producer-topic-1-3 -> List(1, 0, 2), __transaction_state-11 -> List(1), __transaction_state-41 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-10 -> List(1), hello-producer-topic-2-4 -> List(1, 0, 2), __transaction_state-35 -> List(1), __consumer_offsets-40 -> List(1)) (kafka.controller.KafkaController)
[2020-03-31 15:05:14,732] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2020-03-31 15:05:14,733] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-03-31 15:05:14,733] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__transaction_state-42 -> List(2), valid-pos-2 -> List(2, 1, 0), __transaction_state-48 -> List(2), __consumer_offsets-47 -> List(2), __transaction_state-6 -> List(2), __transaction_state-9 -> List(2), __consumer_offsets-11 -> List(2), __transaction_state-18 -> List(2), __consumer_offsets-32 -> List(2), __transaction_state-45 -> List(2), sync-hello-producer-new-0 -> List(2, 0, 1), __transaction_state-15 -> List(2), __transaction_state-12 -> List(2), __consumer_offsets-8 -> List(2), nse-eod-topic-4 -> List(2, 1, 0), pos-2 -> List(2, 1, 0), __consumer_offsets-35 -> List(2), __transaction_state-24 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __transaction_state-0 -> List(2), hello-producer-topic-0 -> List(2), __transaction_state-3 -> List(2), __transaction_state-21 -> List(2), __transaction_state-39 -> List(2), nse-eod-topic-1 -> List(2, 0, 1), __transaction_state-30 -> List(2), __transaction_state-33 -> List(2), __consumer_offsets-38 -> List(2), hello-producer-topic-2-2 -> List(2, 0, 1), __consumer_offsets-17 -> List(2), hello-producer-topic-1-1 -> List(2, 0, 1), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), hello-producer-topic-1-4 -> List(2, 1, 0), __transaction_state-36 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2), __transaction_state-27 -> List(2), __consumer_offsets-29 -> List(2), invalid-pos-0 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2020-03-31 15:05:14,733] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2020-03-31 15:05:14,733] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-03-31 15:07:41,617] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-03-31 15:08:45,847] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-03-31 15:08:46,352] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2020-03-31 15:08:46,353] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-03-31 15:08:46,412] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-03-31 15:08:46,460] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-03-31 15:08:46,517] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-03-31 15:08:47,307] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 24) (kafka.controller.KafkaController)
[2020-03-31 15:08:47,510] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-03-31 15:08:47,563] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-03-31 15:08:47,587] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-03-31 15:08:47,588] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-03-31 15:08:47,596] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-03-31 15:08:47,593] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-03-31 15:08:47,597] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-03-31 15:08:47,732] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-03-31 15:08:47,733] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-03-31 15:08:47,734] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-03-31 15:08:47,736] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-03-31 15:08:47,737] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-03-31 15:08:47,763] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 15:08:47,766] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 15:08:47,778] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 15:08:47,779] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 15:08:47,780] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 15:08:47,782] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 15:08:47,791] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 15:08:47,792] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-03-31 15:08:47,984] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-31 15:08:48,089] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-03-31 15:08:48,090] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-03-31 15:08:48,091] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-03-31 15:08:48,093] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-03-31 15:08:48,098] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-03-31 15:08:48,232] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-03-31 15:08:52,269] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2020-03-31 15:08:52,270] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-03-31 15:08:52,284] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2020-03-31 15:08:52,292] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2020-03-31 15:08:52,297] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-03-31 15:08:52,305] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-31 15:08:52,357] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 24, 1 -> 43) (kafka.controller.KafkaController)
[2020-03-31 15:08:52,456] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-03-31 15:08:52,586] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-03-31 15:08:53,286] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 15:08:53,287] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 15:08:53,290] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:08:59,635] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-03-31 15:08:59,635] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-03-31 15:08:59,654] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-03-31 15:08:59,656] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2020-03-31 15:08:59,660] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-03-31 15:08:59,666] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-31 15:08:59,669] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 24, 1 -> 43, 2 -> 59) (kafka.controller.KafkaController)
[2020-03-31 15:08:59,851] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-03-31 15:08:59,912] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-03-31 15:09:31,304] INFO [Controller id=0] New topics: [Set(hello-producer-topic)], deleted topics: [Set()], new partition replica assignment [HashMap(hello-producer-topic-0 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), hello-producer-topic-2 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), hello-producer-topic-1 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), hello-producer-topic-3 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), hello-producer-topic-4 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-03-31 15:09:31,313] INFO [Controller id=0] New partition creation callback for hello-producer-topic-0,hello-producer-topic-2,hello-producer-topic-1,hello-producer-topic-3,hello-producer-topic-4 (kafka.controller.KafkaController)
[2020-03-31 15:10:13,676] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-03-31 15:10:13,676] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2020-03-31 15:13:53,298] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 15:13:53,298] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 15:13:53,304] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 15:13:53,306] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:13:53,308] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:13:53,308] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:13:53,308] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:13:53,309] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:13:53,309] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:18:53,326] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 15:18:53,327] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 15:18:53,331] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 15:18:53,332] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:18:53,332] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:18:53,332] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:18:53,332] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:18:53,332] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:18:53,332] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:23:53,332] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 15:23:53,332] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 15:23:53,336] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 15:23:53,337] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:23:53,337] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:23:53,337] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:23:53,337] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:23:53,337] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:23:53,337] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:28:53,366] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 15:28:53,366] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 15:28:53,370] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 15:28:53,370] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:28:53,370] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:28:53,370] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:28:53,371] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:28:53,371] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:28:53,371] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:33:53,371] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 15:33:53,371] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 15:33:53,373] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 15:33:53,374] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:33:53,374] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:33:53,374] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:33:53,374] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:33:53,374] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:33:53,374] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:38:53,373] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 15:38:53,373] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 15:38:53,376] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 15:38:53,376] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:38:53,376] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:38:53,376] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:38:53,376] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:38:53,376] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:38:53,376] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:43:53,377] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 15:43:53,377] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 15:43:53,380] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 15:43:53,380] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:43:53,380] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:43:53,381] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:43:53,381] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:43:53,381] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:43:53,381] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:48:53,380] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 15:48:53,380] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 15:48:53,382] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 15:48:53,382] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:48:53,382] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:48:53,382] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:48:53,382] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:48:53,383] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:48:53,383] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:53:53,390] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 15:53:53,390] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 15:53:53,391] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 15:53:53,392] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:53:53,392] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:53:53,392] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:53:53,392] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:53:53,393] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:53:53,393] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:58:53,400] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 15:58:53,400] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 15:58:53,401] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 15:58:53,402] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:58:53,402] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:58:53,402] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:58:53,402] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 15:58:53,403] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 15:58:53,403] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:03:53,411] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 16:03:53,413] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 16:03:53,415] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 16:03:53,416] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:03:53,416] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:03:53,416] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:03:53,416] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:03:53,416] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:03:53,416] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:08:53,423] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 16:08:53,423] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 16:08:53,424] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 16:08:53,425] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:08:53,425] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:08:53,425] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:08:53,425] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:08:53,425] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:08:53,425] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:13:53,432] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 16:13:53,432] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 16:13:53,433] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 16:13:53,433] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:13:53,433] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:13:53,433] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:13:53,434] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:13:53,434] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:13:53,434] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:18:53,446] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 16:18:53,446] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 16:18:53,446] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 16:18:53,446] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:18:53,446] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:18:53,446] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:18:53,446] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:18:53,446] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:18:53,446] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:23:53,454] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 16:23:53,454] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 16:23:53,455] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 16:23:53,456] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:23:53,456] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:23:53,456] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:23:53,456] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:23:53,456] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:23:53,456] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:28:53,475] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 16:28:53,475] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 16:28:53,475] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 16:28:53,475] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:28:53,475] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:28:53,475] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:28:53,475] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:28:53,475] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:28:53,475] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:33:53,484] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 16:33:53,484] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 16:33:53,485] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 16:33:53,485] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:33:53,485] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:33:53,486] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:33:53,486] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:33:53,486] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:33:53,486] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:38:53,493] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 16:38:53,493] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 16:38:53,494] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 16:38:53,494] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:38:53,494] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:38:53,495] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:38:53,495] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:38:53,495] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:38:53,495] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:43:53,502] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 16:43:53,502] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 16:43:53,503] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 16:43:53,503] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:43:53,503] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:43:53,503] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:43:53,503] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:43:53,503] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:43:53,503] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:48:53,510] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 16:48:53,510] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 16:48:53,511] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 16:48:53,511] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:48:53,511] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:48:53,511] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:48:53,512] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:48:53,512] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:48:53,512] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:53:53,519] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 16:53:53,519] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 16:53:53,520] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 16:53:53,520] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:53:53,521] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:53:53,521] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:53:53,521] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:53:53,521] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:53:53,521] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:58:53,532] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 16:58:53,532] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 16:58:53,532] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 16:58:53,534] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:58:53,534] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:58:53,534] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:58:53,534] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 16:58:53,534] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 16:58:53,534] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 17:03:53,534] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 17:03:53,535] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 17:03:53,537] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 17:03:53,537] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 17:03:53,537] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 17:03:53,537] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 17:03:53,537] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 17:03:53,537] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 17:03:53,537] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 17:08:53,546] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 17:08:53,546] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 17:08:53,546] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 17:08:53,546] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 17:08:53,546] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 17:08:53,546] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 17:08:53,546] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 17:08:53,546] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 17:08:53,546] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 17:13:53,555] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 17:13:53,555] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 17:13:53,556] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 17:13:53,556] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 17:13:53,556] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 17:13:53,556] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 17:13:53,556] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 17:13:53,556] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 17:13:53,557] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 17:18:53,565] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 17:18:53,565] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 17:18:53,565] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 17:18:53,565] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 17:18:53,565] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 17:18:53,565] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 17:18:53,565] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 17:18:53,565] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 17:18:53,565] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 19:11:31,772] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 19:11:31,773] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 19:11:31,774] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 19:11:31,774] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-31 19:11:31,775] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 19:11:31,775] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 19:11:31,775] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 19:11:31,775] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 19:11:31,775] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 19:11:37,248] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2020-03-31 19:11:37,251] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-03-31 19:11:37,256] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 19:11:37,260] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 19:11:37,265] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2020-03-31 19:11:37,742] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2020-03-31 19:11:37,742] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2020-03-31 19:11:37,826] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-03-31 19:11:37,853] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-03-31 19:11:37,886] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2020-03-31 19:11:37,904] INFO [Controller id=2] Initialized broker epochs cache: Map(2 -> 185) (kafka.controller.KafkaController)
[2020-03-31 19:11:37,927] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2020-03-31 19:11:38,023] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-03-31 19:11:38,025] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0, 1, 2) (kafka.controller.KafkaController)
[2020-03-31 19:11:38,034] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-03-31 19:11:38,037] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-03-31 19:11:38,042] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 19:11:38,047] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 19:11:38,049] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 19:11:38,052] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 19:11:38,060] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-03-31 19:11:38,090] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-03-31 19:11:38,092] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-03-31 19:11:38,133] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-03-31 19:11:38,144] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-03-31 19:11:38,179] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-03-31 19:11:38,181] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-03-31 19:11:38,186] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-03-31 19:11:38,189] INFO [Controller id=2] Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController)
[2020-03-31 19:11:38,190] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-03-31 19:11:38,191] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-03-31 19:11:38,192] INFO [Controller id=2] Current list of topics in the cluster: Set(__consumer_offsets, hello-producer-topic) (kafka.controller.KafkaController)
[2020-03-31 19:11:38,193] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-03-31 19:11:38,194] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-03-31 19:11:38,194] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-03-31 19:11:38,194] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-03-31 19:11:38,205] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-03-31 19:11:38,489] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-03-31 19:11:38,490] INFO [Controller id=2] List of topics ineligible for deletion: __consumer_offsets,hello-producer-topic (kafka.controller.KafkaController)
[2020-03-31 19:11:38,492] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-03-31 19:11:38,493] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(__consumer_offsets, hello-producer-topic) (kafka.controller.TopicDeletionManager)
[2020-03-31 19:11:38,496] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2020-03-31 19:11:38,561] INFO [RequestSendThread controllerId=2] Controller 2 connected to DELL-PC:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-31 19:11:38,576] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 19:11:38,607] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 19:11:38,641] DEBUG [Controller id=0] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-03-31 19:11:38,659] DEBUG [Controller id=1] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-03-31 19:11:38,688] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 19:11:40,142] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=34,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OfflineReplica, [Topic=hello-producer-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OfflineReplica, [Topic=hello-producer-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=hello-producer-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OfflineReplica, [Topic=hello-producer-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=hello-producer-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OfflineReplica, [Topic=hello-producer-topic,Partition=2,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=hello-producer-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OfflineReplica, [Topic=hello-producer-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OfflineReplica, [Topic=hello-producer-topic,Partition=3,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OfflineReplica, [Topic=hello-producer-topic,Partition=3,Replica=0] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 19:11:40,142] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 19:11:40,162] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 19:11:40,612] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, hello-producer-topic-2 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, hello-producer-topic-3 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OnlinePartition, hello-producer-topic-4 -> OnlinePartition, hello-producer-topic-0 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, hello-producer-topic-1 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 19:11:40,613] INFO [Controller id=2] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2020-03-31 19:11:40,856] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-03-31 19:11:40,857] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-03-31 19:11:40,857] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-03-31 19:11:40,858] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-03-31 19:11:40,860] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-03-31 19:11:41,235] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-03-31 19:11:41,665] INFO [Controller id=2] Newly added brokers: 0,1, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-03-31 19:11:41,667] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-03-31 19:11:41,674] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-03-31 19:11:41,687] INFO [Controller id=2] New broker startup callback for 0,1 (kafka.controller.KafkaController)
[2020-03-31 19:11:41,795] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-03-31 19:11:41,742] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-03-31 19:11:41,829] INFO [RequestSendThread controllerId=2] Controller 2 connected to DELL-PC:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-31 19:11:41,862] INFO [RequestSendThread controllerId=2] Controller 2 connected to DELL-PC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-31 19:11:42,797] DEBUG [Controller id=2] Register BrokerModifications handler for List(0, 1) (kafka.controller.KafkaController)
[2020-03-31 19:11:42,824] INFO [Controller id=2] Updated broker epochs cache: Map(2 -> 185, 0 -> 189, 1 -> 190) (kafka.controller.KafkaController)
[2020-03-31 19:11:43,222] DEBUG [Controller id=2] Sending MetadataRequest to Brokers: List(2, 0, 1) for TopicPartitions: ArrayBuffer(hello-producer-topic-4, hello-producer-topic-1) (kafka.controller.KafkaController)
[2020-03-31 19:11:46,236] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 19:11:46,236] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 19:11:46,240] DEBUG [Controller id=2] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 19:11:46,258] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 19:11:46,260] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 19:11:46,261] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(hello-producer-topic-3 -> List(1, 0, 2), hello-producer-topic-0 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2020-03-31 19:11:46,261] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.10526315789473684 (kafka.controller.KafkaController)
[2020-03-31 19:11:46,269] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions hello-producer-topic-3,hello-producer-topic-0 triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-03-31 19:11:46,375] INFO [Controller id=2] Partition hello-producer-topic-3 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2020-03-31 19:11:46,375] INFO [Controller id=2] Partition hello-producer-topic-0 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2020-03-31 19:11:46,376] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 19:11:46,376] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 19:11:50,231] DEBUG [Controller id=2] Sending MetadataRequest to Brokers: List(2, 0, 1) for TopicPartitions: ArrayBuffer(hello-producer-topic-0, hello-producer-topic-3, hello-producer-topic-2) (kafka.controller.KafkaController)
[2020-03-31 19:16:46,377] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 19:16:46,377] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 19:16:46,392] DEBUG [Controller id=2] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 19:16:46,392] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 19:16:46,393] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 19:16:46,393] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 19:16:46,393] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 19:16:46,393] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 19:16:46,393] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 19:21:46,401] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 19:21:46,401] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 19:21:46,404] DEBUG [Controller id=2] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 19:21:46,404] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 19:21:46,404] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 19:21:46,404] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 19:21:46,404] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 19:21:46,404] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 19:21:46,404] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 19:26:46,404] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 19:26:46,404] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 19:26:46,406] DEBUG [Controller id=2] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 19:26:46,407] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 19:26:46,407] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 19:26:46,408] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 19:26:46,408] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 19:26:46,408] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 19:26:46,408] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 19:31:46,415] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 19:31:46,415] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 19:31:46,418] DEBUG [Controller id=2] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 19:31:46,418] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 19:31:46,419] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 19:31:46,419] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 19:31:46,419] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 19:31:46,419] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 19:31:46,419] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 19:36:46,426] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 19:36:46,426] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 19:36:46,428] DEBUG [Controller id=2] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 19:36:46,429] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 19:36:46,429] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 19:36:46,429] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 19:36:46,429] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 19:36:46,429] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 19:36:46,429] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 19:41:46,436] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 19:41:46,436] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 19:41:46,439] DEBUG [Controller id=2] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 19:41:46,439] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 19:41:46,439] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 19:41:46,440] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 19:41:46,440] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 19:41:46,440] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 19:41:46,440] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 19:46:46,447] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 19:46:46,447] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 19:46:46,448] DEBUG [Controller id=2] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 19:46:46,449] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 19:46:46,449] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 19:46:46,449] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 19:46:46,449] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 19:46:46,449] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 19:46:46,449] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 19:51:46,449] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 19:51:46,449] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 19:51:46,451] DEBUG [Controller id=2] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 19:51:46,451] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 19:51:46,452] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 19:51:46,452] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 19:51:46,452] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 19:51:46,452] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 19:51:46,452] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 19:56:46,474] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 19:56:46,474] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 19:56:46,474] DEBUG [Controller id=2] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 19:56:46,474] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 19:56:46,474] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 19:56:46,474] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 19:56:46,474] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 19:56:46,474] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 19:56:46,474] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 20:01:46,488] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 20:01:46,489] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 20:01:46,490] DEBUG [Controller id=2] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 20:01:46,490] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 20:01:46,490] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 20:01:46,490] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 20:01:46,490] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 20:01:46,490] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 20:01:46,490] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 20:06:46,497] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 20:06:46,497] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 20:06:46,498] DEBUG [Controller id=2] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 20:06:46,498] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 20:06:46,498] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 20:06:46,498] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 20:06:46,498] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 20:06:46,498] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 20:06:46,498] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 22:09:03,798] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 22:09:03,799] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 22:09:03,800] DEBUG [Controller id=2] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 22:09:03,825] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 22:09:03,825] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 22:09:03,825] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 22:09:03,825] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 22:09:03,826] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 22:09:03,826] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 22:09:06,761] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-03-31 22:09:06,763] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-03-31 22:09:06,763] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 22:09:06,763] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 22:09:06,763] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-03-31 22:09:07,272] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2020-03-31 22:09:07,273] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set(0, 1, 2) (kafka.controller.KafkaController)
[2020-03-31 22:09:07,275] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 22:09:07,276] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 22:09:07,276] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-03-31 22:09:07,277] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-03-31 22:09:07,277] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-03-31 22:09:07,280] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-03-31 22:09:07,280] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-03-31 22:09:07,280] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-03-31 22:09:07,283] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-03-31 22:09:07,283] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-03-31 22:09:07,283] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-03-31 22:09:07,285] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2020-03-31 22:09:07,297] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-03-31 22:09:07,298] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-03-31 22:09:07,298] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 22:09:07,298] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 22:09:07,298] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-03-31 22:09:08,856] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2020-03-31 22:09:08,856] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-03-31 22:09:08,890] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-03-31 22:09:08,896] DEBUG [Controller id=2] Broker 0 was elected as controller instead of broker 2 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-03-31 22:09:08,907] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-03-31 22:09:08,910] DEBUG [Controller id=1] Broker 0 was elected as controller instead of broker 1 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-03-31 22:09:08,915] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-03-31 22:09:08,927] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 293, 1 -> 294, 2 -> 295) (kafka.controller.KafkaController)
[2020-03-31 22:09:09,000] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0, 1, 2) (kafka.controller.KafkaController)
[2020-03-31 22:09:09,040] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-03-31 22:09:09,048] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-03-31 22:09:09,055] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-03-31 22:09:09,064] INFO [Controller id=0] Currently active brokers in the cluster: Set(0, 1, 2) (kafka.controller.KafkaController)
[2020-03-31 22:09:09,064] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-03-31 22:09:09,064] INFO [Controller id=0] Current list of topics in the cluster: Set(__consumer_offsets, hello-producer-topic) (kafka.controller.KafkaController)
[2020-03-31 22:09:09,064] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-03-31 22:09:09,078] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-03-31 22:09:09,080] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-03-31 22:09:09,082] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-03-31 22:09:09,088] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-03-31 22:09:09,088] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-03-31 22:09:09,088] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-03-31 22:09:09,088] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-03-31 22:09:09,088] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-03-31 22:09:09,090] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 22:09:09,091] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-31 22:09:09,092] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-31 22:09:09,093] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 22:09:09,152] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-31 22:09:09,177] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 22:09:09,178] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=34,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic,Partition=3,Replica=1] -> OnlineReplica, [Topic=hello-producer-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic,Partition=2,Replica=1] -> OnlineReplica, [Topic=hello-producer-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OnlineReplica, [Topic=hello-producer-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OnlineReplica, [Topic=hello-producer-topic,Partition=3,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic,Partition=3,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 22:09:09,178] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 22:09:09,179] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 22:09:09,179] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, hello-producer-topic-2 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, hello-producer-topic-3 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, hello-producer-topic-4 -> OnlinePartition, hello-producer-topic-0 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, hello-producer-topic-1 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 22:09:09,179] INFO [Controller id=0] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2020-03-31 22:09:09,232] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-03-31 22:09:09,232] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-03-31 22:09:09,232] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-03-31 22:09:09,232] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-03-31 22:09:09,232] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-03-31 22:09:09,529] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-03-31 22:09:14,529] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 22:09:14,529] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 22:09:14,531] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 22:09:14,561] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 22:09:14,562] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 22:09:14,562] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 22:09:14,562] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 22:09:14,562] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 22:09:14,562] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 22:30:43,544] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 22:30:43,544] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 22:30:43,545] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 22:30:43,546] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 22:30:43,546] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 22:30:43,546] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 22:30:43,546] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 22:30:43,546] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 22:30:43,546] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 22:30:45,362] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2020-03-31 22:30:45,362] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-03-31 22:30:45,362] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 22:30:45,362] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 22:30:45,363] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2020-03-31 22:30:45,574] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-03-31 22:30:45,574] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-03-31 22:30:45,574] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 22:30:45,574] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 22:30:45,574] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-03-31 22:30:45,878] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-03-31 22:30:45,878] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0, 1, 2) (kafka.controller.KafkaController)
[2020-03-31 22:30:45,880] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 22:30:45,881] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 22:30:45,881] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-03-31 22:30:45,881] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-03-31 22:30:45,881] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-03-31 22:30:45,909] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-03-31 22:30:45,915] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-03-31 22:30:45,915] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-03-31 22:30:45,923] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-03-31 22:30:45,923] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-03-31 22:30:45,923] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-03-31 22:30:45,927] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-03-31 22:30:47,017] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2020-03-31 22:30:47,017] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2020-03-31 22:30:47,037] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-03-31 22:30:47,039] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-03-31 22:30:47,040] DEBUG [Controller id=1] Broker 2 was elected as controller instead of broker 1 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-03-31 22:30:47,043] DEBUG [Controller id=0] Broker 2 was elected as controller instead of broker 0 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-03-31 22:30:47,045] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2020-03-31 22:30:47,054] INFO [Controller id=2] Initialized broker epochs cache: Map(0 -> 307, 1 -> 308, 2 -> 306) (kafka.controller.KafkaController)
[2020-03-31 22:30:47,075] DEBUG [Controller id=2] Register BrokerModifications handler for Set(0, 1, 2) (kafka.controller.KafkaController)
[2020-03-31 22:30:47,170] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-03-31 22:30:47,176] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-03-31 22:30:47,183] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-03-31 22:30:47,191] INFO [Controller id=2] Currently active brokers in the cluster: Set(0, 1, 2) (kafka.controller.KafkaController)
[2020-03-31 22:30:47,191] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-03-31 22:30:47,191] INFO [Controller id=2] Current list of topics in the cluster: Set(__consumer_offsets, hello-producer-topic) (kafka.controller.KafkaController)
[2020-03-31 22:30:47,191] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-03-31 22:30:47,192] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-03-31 22:30:47,193] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-03-31 22:30:47,196] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-03-31 22:30:47,196] INFO [Controller id=2] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-03-31 22:30:47,196] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-03-31 22:30:47,196] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-03-31 22:30:47,196] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2020-03-31 22:30:47,192] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-03-31 22:30:47,197] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 22:30:47,198] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 22:30:47,198] INFO [RequestSendThread controllerId=2] Controller 2 connected to DELL-PC:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-31 22:30:47,199] INFO [RequestSendThread controllerId=2] Controller 2 connected to DELL-PC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-31 22:30:47,211] INFO [RequestSendThread controllerId=2] Controller 2 connected to DELL-PC:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-31 22:30:47,252] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 22:30:47,255] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=34,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic,Partition=3,Replica=1] -> OnlineReplica, [Topic=hello-producer-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic,Partition=2,Replica=1] -> OnlineReplica, [Topic=hello-producer-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OnlineReplica, [Topic=hello-producer-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OnlineReplica, [Topic=hello-producer-topic,Partition=3,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic,Partition=3,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-03-31 22:30:47,255] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 22:30:47,267] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 22:30:47,267] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, hello-producer-topic-2 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, hello-producer-topic-3 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, hello-producer-topic-4 -> OnlinePartition, hello-producer-topic-0 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, hello-producer-topic-1 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-03-31 22:30:47,268] INFO [Controller id=2] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2020-03-31 22:30:47,334] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-03-31 22:30:47,334] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-03-31 22:30:47,334] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-03-31 22:30:47,334] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-03-31 22:30:47,334] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-03-31 22:30:47,500] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-03-31 22:30:52,500] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 22:30:52,500] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 22:30:52,501] DEBUG [Controller id=2] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 22:30:52,501] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 22:30:52,501] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 22:30:52,501] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 22:30:52,501] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 22:30:52,501] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 22:30:52,501] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 22:35:52,508] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 22:35:52,508] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 22:35:52,509] DEBUG [Controller id=2] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 22:35:52,509] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 22:35:52,509] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 22:35:52,509] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 22:35:52,509] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 22:35:52,510] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 22:35:52,510] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 22:40:52,517] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 22:40:52,517] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 22:40:52,518] DEBUG [Controller id=2] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 22:40:52,518] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 22:40:52,518] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 22:40:52,518] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 22:40:52,518] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 22:40:52,519] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 22:40:52,519] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 22:45:52,526] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 22:45:52,526] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 22:45:52,526] DEBUG [Controller id=2] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 22:45:52,526] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 22:45:52,526] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 22:45:52,526] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 22:45:52,526] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 22:45:52,526] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 22:45:52,526] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 22:50:52,535] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 22:50:52,535] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 22:50:52,536] DEBUG [Controller id=2] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 22:50:52,537] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 22:50:52,537] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 22:50:52,537] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 22:50:52,537] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 22:50:52,537] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 22:50:52,537] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 22:55:52,544] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 22:55:52,544] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 22:55:52,545] DEBUG [Controller id=2] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 22:55:52,545] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 22:55:52,546] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 22:55:52,546] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 22:55:52,546] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 22:55:52,546] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 22:55:52,546] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 23:00:52,553] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 23:00:52,554] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 23:00:52,555] DEBUG [Controller id=2] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 23:00:52,555] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 23:00:52,555] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 23:00:52,555] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 23:00:52,555] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 23:00:52,556] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 23:00:52,556] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 23:05:52,563] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 23:05:52,563] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 23:05:52,564] DEBUG [Controller id=2] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 23:05:52,565] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 23:05:52,565] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 23:05:52,565] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 23:05:52,565] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 23:05:52,565] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 23:05:52,565] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 23:10:52,572] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 23:10:52,572] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 23:10:52,574] DEBUG [Controller id=2] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 23:10:52,574] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 23:10:52,574] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 23:10:52,575] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 23:10:52,575] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 23:10:52,575] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 23:10:52,575] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 23:15:52,583] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-31 23:15:52,583] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 23:15:52,592] DEBUG [Controller id=2] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-47 -> List(0), hello-producer-topic-2 -> List(0, 1, 2), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0)), 1 -> HashMap(hello-producer-topic-3 -> List(1, 0, 2), __consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), hello-producer-topic-0 -> List(1, 2, 0), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)), 2 -> HashMap(__consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), hello-producer-topic-1 -> List(2, 0, 1), __consumer_offsets-22 -> List(2), hello-producer-topic-4 -> List(2, 1, 0), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2))) (kafka.controller.KafkaController)
[2020-03-31 23:15:52,593] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(hello-producer-topic-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2020-03-31 23:15:52,593] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-03-31 23:15:52,593] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-31 23:15:52,593] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 23:15:52,593] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-31 23:15:52,593] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
