[2020-02-24 07:25:11,328] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-02-24 07:27:18,413] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-24 07:27:19,790] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2020-02-24 07:27:19,791] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-02-24 07:27:19,809] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-02-24 07:27:19,817] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-02-24 07:27:19,822] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-02-24 07:27:20,331] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 116) (kafka.controller.KafkaController)
[2020-02-24 07:27:20,470] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-02-24 07:27:21,118] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-02-24 07:27:21,365] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-02-24 07:27:21,374] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-02-24 07:27:21,375] INFO [Controller id=0] Current list of topics in the cluster: Set(myfirst, mysecond) (kafka.controller.KafkaController)
[2020-02-24 07:27:21,376] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-02-24 07:27:21,381] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-02-24 07:27:21,543] INFO [Controller id=0] List of topics to be deleted: mysecond (kafka.controller.KafkaController)
[2020-02-24 07:27:21,544] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-02-24 07:27:21,545] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-02-24 07:27:21,547] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(mysecond), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-02-24 07:27:21,548] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-02-24 07:27:21,588] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 07:27:21,713] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 07:27:21,773] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 07:27:21,775] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=mysecond,Partition=2,Replica=0] -> OnlineReplica, [Topic=mysecond,Partition=1,Replica=0] -> OnlineReplica, [Topic=mysecond,Partition=0,Replica=0] -> OnlineReplica, [Topic=myfirst,Partition=1,Replica=0] -> OnlineReplica, [Topic=myfirst,Partition=2,Replica=0] -> OnlineReplica, [Topic=myfirst,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 07:27:21,776] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 07:27:21,870] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 07:27:21,916] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(mysecond-2 -> OfflinePartition, myfirst-2 -> OnlinePartition, myfirst-1 -> OnlinePartition, myfirst-0 -> OnlinePartition, mysecond-0 -> OfflinePartition, mysecond-1 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 07:27:21,917] INFO [Controller id=0] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2020-02-24 07:27:21,924] INFO [Topic Deletion Manager 0] Handling deletion for topics mysecond (kafka.controller.TopicDeletionManager)
[2020-02-24 07:27:21,927] INFO [Topic Deletion Manager 0] Deletion of topic mysecond (re)started (kafka.controller.TopicDeletionManager)
[2020-02-24 07:27:21,928] INFO [Topic Deletion Manager 0] Topic deletion callback for mysecond (kafka.controller.TopicDeletionManager)
[2020-02-24 07:27:21,943] INFO [Topic Deletion Manager 0] Partition deletion callback for mysecond-0,mysecond-1,mysecond-2 (kafka.controller.TopicDeletionManager)
[2020-02-24 07:27:22,125] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-24 07:27:22,601] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=mysecond,Partition=0,Replica=0],false),StopReplicaRequestInfo([Topic=mysecond,Partition=1,Replica=0],false),StopReplicaRequestInfo([Topic=mysecond,Partition=2,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-24 07:27:22,602] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=mysecond,Partition=0,Replica=0],[Topic=mysecond,Partition=1,Replica=0],[Topic=mysecond,Partition=2,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-02-24 07:27:22,605] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=mysecond,Partition=0,Replica=0],true),StopReplicaRequestInfo([Topic=mysecond,Partition=1,Replica=0],true),StopReplicaRequestInfo([Topic=mysecond,Partition=2,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-24 07:27:22,610] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-02-24 07:27:22,612] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-02-24 07:27:22,614] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-02-24 07:27:22,615] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-02-24 07:27:22,915] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-02-24 07:27:23,199] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-02-24 07:27:28,202] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 07:27:28,203] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 07:27:28,208] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> Map(myfirst-2 -> List(0), myfirst-0 -> List(0), myfirst-1 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 07:27:28,211] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-24 07:27:28,214] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 07:27:29,224] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(mysecond-2 -> KAFKA_STORAGE_ERROR, mysecond-0 -> KAFKA_STORAGE_ERROR, mysecond-1 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2020-02-24 07:27:29,236] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=mysecond,Partition=2,Replica=0],[Topic=mysecond,Partition=0,Replica=0],[Topic=mysecond,Partition=1,Replica=0]. Halting deletion for topics Set(mysecond) (kafka.controller.TopicDeletionManager)
[2020-02-24 07:27:29,241] INFO [Topic Deletion Manager 0] Halted deletion of topics mysecond due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2020-02-24 07:27:29,241] INFO [Topic Deletion Manager 0] Handling deletion for topics mysecond (kafka.controller.TopicDeletionManager)
[2020-02-24 07:27:29,243] INFO [Topic Deletion Manager 0] Retrying deletion of topic mysecond since replicas [Topic=mysecond,Partition=0,Replica=0],[Topic=mysecond,Partition=1,Replica=0],[Topic=mysecond,Partition=2,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2020-02-24 08:05:51,709] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-24 08:05:51,769] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2020-02-24 08:05:51,770] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-02-24 08:05:51,781] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-02-24 08:05:51,798] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-02-24 08:05:51,807] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-02-24 08:05:51,867] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 141) (kafka.controller.KafkaController)
[2020-02-24 08:05:51,906] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-02-24 08:05:51,938] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-02-24 08:05:51,967] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-02-24 08:05:51,968] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-02-24 08:05:51,968] INFO [Controller id=0] Current list of topics in the cluster: Set(myfirst, mysecond) (kafka.controller.KafkaController)
[2020-02-24 08:05:51,969] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-02-24 08:05:51,986] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-02-24 08:05:51,995] INFO [Controller id=0] List of topics to be deleted: mysecond (kafka.controller.KafkaController)
[2020-02-24 08:05:51,996] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-02-24 08:05:51,996] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-02-24 08:05:51,998] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(mysecond), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-02-24 08:05:51,999] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-02-24 08:05:52,023] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 08:05:52,052] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 08:05:52,113] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-24 08:05:52,130] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 08:05:52,134] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=mysecond,Partition=2,Replica=0] -> OnlineReplica, [Topic=mysecond,Partition=1,Replica=0] -> OnlineReplica, [Topic=mysecond,Partition=0,Replica=0] -> OnlineReplica, [Topic=myfirst,Partition=1,Replica=0] -> OnlineReplica, [Topic=myfirst,Partition=2,Replica=0] -> OnlineReplica, [Topic=myfirst,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 08:05:52,136] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 08:05:52,144] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 08:05:52,150] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(mysecond-2 -> OfflinePartition, myfirst-2 -> OnlinePartition, myfirst-1 -> OnlinePartition, myfirst-0 -> OnlinePartition, mysecond-0 -> OfflinePartition, mysecond-1 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 08:05:52,151] INFO [Controller id=0] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2020-02-24 08:05:52,164] INFO [Topic Deletion Manager 0] Handling deletion for topics mysecond (kafka.controller.TopicDeletionManager)
[2020-02-24 08:05:52,170] INFO [Topic Deletion Manager 0] Deletion of topic mysecond (re)started (kafka.controller.TopicDeletionManager)
[2020-02-24 08:05:52,170] INFO [Topic Deletion Manager 0] Topic deletion callback for mysecond (kafka.controller.TopicDeletionManager)
[2020-02-24 08:05:52,241] INFO [Topic Deletion Manager 0] Partition deletion callback for mysecond-0,mysecond-1,mysecond-2 (kafka.controller.TopicDeletionManager)
[2020-02-24 08:05:52,360] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=mysecond,Partition=0,Replica=0],false),StopReplicaRequestInfo([Topic=mysecond,Partition=1,Replica=0],false),StopReplicaRequestInfo([Topic=mysecond,Partition=2,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-24 08:05:52,377] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=mysecond,Partition=0,Replica=0],[Topic=mysecond,Partition=1,Replica=0],[Topic=mysecond,Partition=2,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-02-24 08:05:52,380] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=mysecond,Partition=0,Replica=0],true),StopReplicaRequestInfo([Topic=mysecond,Partition=1,Replica=0],true),StopReplicaRequestInfo([Topic=mysecond,Partition=2,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-24 08:05:52,392] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-02-24 08:05:52,393] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-02-24 08:05:52,396] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-02-24 08:05:52,397] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-02-24 08:05:52,400] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-02-24 08:05:52,451] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-02-24 08:05:52,901] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(mysecond-2 -> KAFKA_STORAGE_ERROR, mysecond-0 -> KAFKA_STORAGE_ERROR, mysecond-1 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2020-02-24 08:05:52,905] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=mysecond,Partition=2,Replica=0],[Topic=mysecond,Partition=0,Replica=0],[Topic=mysecond,Partition=1,Replica=0]. Halting deletion for topics Set(mysecond) (kafka.controller.TopicDeletionManager)
[2020-02-24 08:05:52,909] INFO [Topic Deletion Manager 0] Halted deletion of topics mysecond due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2020-02-24 08:05:52,909] INFO [Topic Deletion Manager 0] Handling deletion for topics mysecond (kafka.controller.TopicDeletionManager)
[2020-02-24 08:05:52,910] INFO [Topic Deletion Manager 0] Retrying deletion of topic mysecond since replicas [Topic=mysecond,Partition=0,Replica=0],[Topic=mysecond,Partition=1,Replica=0],[Topic=mysecond,Partition=2,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2020-02-24 08:06:36,175] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-24 08:06:36,242] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 5 and epoch zk version is now 5 (kafka.controller.KafkaController)
[2020-02-24 08:06:36,243] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-02-24 08:06:36,255] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-02-24 08:06:36,264] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-02-24 08:06:36,283] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-02-24 08:06:36,352] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 166) (kafka.controller.KafkaController)
[2020-02-24 08:06:36,376] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-02-24 08:06:36,406] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-02-24 08:06:36,432] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-02-24 08:06:36,434] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-02-24 08:06:36,435] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-02-24 08:06:36,436] INFO [Controller id=0] Current list of topics in the cluster: Set(myfirst, mysecond) (kafka.controller.KafkaController)
[2020-02-24 08:06:36,436] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-02-24 08:06:36,449] INFO [Controller id=0] List of topics to be deleted: mysecond (kafka.controller.KafkaController)
[2020-02-24 08:06:36,450] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-02-24 08:06:36,450] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-02-24 08:06:36,452] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(mysecond), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-02-24 08:06:36,453] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-02-24 08:06:36,491] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-24 08:06:36,503] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 08:06:36,516] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 08:06:36,631] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 08:06:36,633] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=mysecond,Partition=2,Replica=0] -> OnlineReplica, [Topic=mysecond,Partition=1,Replica=0] -> OnlineReplica, [Topic=mysecond,Partition=0,Replica=0] -> OnlineReplica, [Topic=myfirst,Partition=1,Replica=0] -> OnlineReplica, [Topic=myfirst,Partition=2,Replica=0] -> OnlineReplica, [Topic=myfirst,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 08:06:36,634] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 08:06:36,644] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 08:06:36,652] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(mysecond-2 -> OfflinePartition, myfirst-2 -> OnlinePartition, myfirst-1 -> OnlinePartition, myfirst-0 -> OnlinePartition, mysecond-0 -> OfflinePartition, mysecond-1 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 08:06:36,686] INFO [Controller id=0] Ready to serve as the new controller with epoch 5 (kafka.controller.KafkaController)
[2020-02-24 08:06:36,715] INFO [Topic Deletion Manager 0] Handling deletion for topics mysecond (kafka.controller.TopicDeletionManager)
[2020-02-24 08:06:36,720] INFO [Topic Deletion Manager 0] Deletion of topic mysecond (re)started (kafka.controller.TopicDeletionManager)
[2020-02-24 08:06:36,721] INFO [Topic Deletion Manager 0] Topic deletion callback for mysecond (kafka.controller.TopicDeletionManager)
[2020-02-24 08:06:36,776] INFO [Topic Deletion Manager 0] Partition deletion callback for mysecond-0,mysecond-1,mysecond-2 (kafka.controller.TopicDeletionManager)
[2020-02-24 08:06:36,887] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=mysecond,Partition=0,Replica=0],false),StopReplicaRequestInfo([Topic=mysecond,Partition=1,Replica=0],false),StopReplicaRequestInfo([Topic=mysecond,Partition=2,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-24 08:06:36,891] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=mysecond,Partition=0,Replica=0],[Topic=mysecond,Partition=1,Replica=0],[Topic=mysecond,Partition=2,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-02-24 08:06:36,899] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=mysecond,Partition=0,Replica=0],true),StopReplicaRequestInfo([Topic=mysecond,Partition=1,Replica=0],true),StopReplicaRequestInfo([Topic=mysecond,Partition=2,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-24 08:06:36,907] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-02-24 08:06:36,908] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-02-24 08:06:36,908] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-02-24 08:06:36,909] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-02-24 08:06:36,912] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-02-24 08:06:36,960] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-02-24 08:06:37,267] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(mysecond-2 -> KAFKA_STORAGE_ERROR, mysecond-0 -> KAFKA_STORAGE_ERROR, mysecond-1 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2020-02-24 08:06:37,272] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=mysecond,Partition=2,Replica=0],[Topic=mysecond,Partition=0,Replica=0],[Topic=mysecond,Partition=1,Replica=0]. Halting deletion for topics Set(mysecond) (kafka.controller.TopicDeletionManager)
[2020-02-24 08:06:37,276] INFO [Topic Deletion Manager 0] Halted deletion of topics mysecond due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2020-02-24 08:06:37,277] INFO [Topic Deletion Manager 0] Handling deletion for topics mysecond (kafka.controller.TopicDeletionManager)
[2020-02-24 08:06:37,278] INFO [Topic Deletion Manager 0] Retrying deletion of topic mysecond since replicas [Topic=mysecond,Partition=0,Replica=0],[Topic=mysecond,Partition=1,Replica=0],[Topic=mysecond,Partition=2,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2020-02-24 08:12:38,174] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-24 08:12:38,220] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 6 and epoch zk version is now 6 (kafka.controller.KafkaController)
[2020-02-24 08:12:38,221] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-02-24 08:12:38,249] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-02-24 08:12:38,278] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-02-24 08:12:38,310] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-02-24 08:12:38,381] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 188) (kafka.controller.KafkaController)
[2020-02-24 08:12:38,410] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-02-24 08:12:38,443] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-02-24 08:12:38,470] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-02-24 08:12:38,472] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-02-24 08:12:38,474] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-02-24 08:12:38,475] INFO [Controller id=0] Current list of topics in the cluster: Set(myfirst, mysecond) (kafka.controller.KafkaController)
[2020-02-24 08:12:38,476] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-02-24 08:12:38,487] INFO [Controller id=0] List of topics to be deleted: mysecond (kafka.controller.KafkaController)
[2020-02-24 08:12:38,488] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-02-24 08:12:38,489] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-02-24 08:12:38,490] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(mysecond), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-02-24 08:12:38,491] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-02-24 08:12:38,518] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 08:12:38,542] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 08:12:38,577] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-24 08:12:38,606] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 08:12:38,608] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=mysecond,Partition=2,Replica=0] -> OnlineReplica, [Topic=mysecond,Partition=1,Replica=0] -> OnlineReplica, [Topic=mysecond,Partition=0,Replica=0] -> OnlineReplica, [Topic=myfirst,Partition=1,Replica=0] -> OnlineReplica, [Topic=myfirst,Partition=2,Replica=0] -> OnlineReplica, [Topic=myfirst,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 08:12:38,609] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 08:12:38,631] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 08:12:38,637] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(mysecond-2 -> OfflinePartition, myfirst-2 -> OnlinePartition, myfirst-1 -> OnlinePartition, myfirst-0 -> OnlinePartition, mysecond-0 -> OfflinePartition, mysecond-1 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 08:12:38,638] INFO [Controller id=0] Ready to serve as the new controller with epoch 6 (kafka.controller.KafkaController)
[2020-02-24 08:12:38,681] INFO [Topic Deletion Manager 0] Handling deletion for topics mysecond (kafka.controller.TopicDeletionManager)
[2020-02-24 08:12:38,686] INFO [Topic Deletion Manager 0] Deletion of topic mysecond (re)started (kafka.controller.TopicDeletionManager)
[2020-02-24 08:12:38,688] INFO [Topic Deletion Manager 0] Topic deletion callback for mysecond (kafka.controller.TopicDeletionManager)
[2020-02-24 08:12:38,732] INFO [Topic Deletion Manager 0] Partition deletion callback for mysecond-0,mysecond-1,mysecond-2 (kafka.controller.TopicDeletionManager)
[2020-02-24 08:12:38,868] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=mysecond,Partition=0,Replica=0],false),StopReplicaRequestInfo([Topic=mysecond,Partition=1,Replica=0],false),StopReplicaRequestInfo([Topic=mysecond,Partition=2,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-24 08:12:38,870] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=mysecond,Partition=0,Replica=0],[Topic=mysecond,Partition=1,Replica=0],[Topic=mysecond,Partition=2,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-02-24 08:12:38,874] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=mysecond,Partition=0,Replica=0],true),StopReplicaRequestInfo([Topic=mysecond,Partition=1,Replica=0],true),StopReplicaRequestInfo([Topic=mysecond,Partition=2,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-24 08:12:38,881] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-02-24 08:12:38,882] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-02-24 08:12:38,883] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-02-24 08:12:38,884] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-02-24 08:12:38,887] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-02-24 08:12:38,932] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-02-24 08:12:39,427] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(mysecond-2 -> KAFKA_STORAGE_ERROR, mysecond-0 -> KAFKA_STORAGE_ERROR, mysecond-1 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2020-02-24 08:12:39,433] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=mysecond,Partition=2,Replica=0],[Topic=mysecond,Partition=0,Replica=0],[Topic=mysecond,Partition=1,Replica=0]. Halting deletion for topics Set(mysecond) (kafka.controller.TopicDeletionManager)
[2020-02-24 08:12:39,439] INFO [Topic Deletion Manager 0] Halted deletion of topics mysecond due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2020-02-24 08:12:39,439] INFO [Topic Deletion Manager 0] Handling deletion for topics mysecond (kafka.controller.TopicDeletionManager)
[2020-02-24 08:12:39,440] INFO [Topic Deletion Manager 0] Retrying deletion of topic mysecond since replicas [Topic=mysecond,Partition=0,Replica=0],[Topic=mysecond,Partition=1,Replica=0],[Topic=mysecond,Partition=2,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2020-02-24 08:12:39,455] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=mysecond,Partition=0,Replica=0],false),StopReplicaRequestInfo([Topic=mysecond,Partition=1,Replica=0],false),StopReplicaRequestInfo([Topic=mysecond,Partition=2,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-24 08:13:29,006] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-24 08:13:29,080] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 7 and epoch zk version is now 7 (kafka.controller.KafkaController)
[2020-02-24 08:13:29,081] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-02-24 08:13:29,094] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-02-24 08:13:29,107] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-02-24 08:13:29,116] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-02-24 08:13:29,166] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 213) (kafka.controller.KafkaController)
[2020-02-24 08:13:29,212] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-02-24 08:13:29,245] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-02-24 08:13:29,280] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-02-24 08:13:29,293] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-02-24 08:13:29,294] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-02-24 08:13:29,295] INFO [Controller id=0] Current list of topics in the cluster: Set(myfirst, mysecond) (kafka.controller.KafkaController)
[2020-02-24 08:13:29,296] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-02-24 08:13:29,334] INFO [Controller id=0] List of topics to be deleted: mysecond (kafka.controller.KafkaController)
[2020-02-24 08:13:29,336] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-02-24 08:13:29,337] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-02-24 08:13:29,338] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(mysecond), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-02-24 08:13:29,339] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-02-24 08:13:29,421] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 08:13:29,432] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 08:13:29,438] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-24 08:13:29,536] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 08:13:29,537] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=mysecond,Partition=2,Replica=0] -> OnlineReplica, [Topic=mysecond,Partition=1,Replica=0] -> OnlineReplica, [Topic=mysecond,Partition=0,Replica=0] -> OnlineReplica, [Topic=myfirst,Partition=1,Replica=0] -> OnlineReplica, [Topic=myfirst,Partition=2,Replica=0] -> OnlineReplica, [Topic=myfirst,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 08:13:29,539] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 08:13:29,569] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 08:13:29,578] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(mysecond-2 -> OfflinePartition, myfirst-2 -> OnlinePartition, myfirst-1 -> OnlinePartition, myfirst-0 -> OnlinePartition, mysecond-0 -> OfflinePartition, mysecond-1 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 08:13:29,579] INFO [Controller id=0] Ready to serve as the new controller with epoch 7 (kafka.controller.KafkaController)
[2020-02-24 08:13:29,593] INFO [Topic Deletion Manager 0] Handling deletion for topics mysecond (kafka.controller.TopicDeletionManager)
[2020-02-24 08:13:29,600] INFO [Topic Deletion Manager 0] Deletion of topic mysecond (re)started (kafka.controller.TopicDeletionManager)
[2020-02-24 08:13:29,601] INFO [Topic Deletion Manager 0] Topic deletion callback for mysecond (kafka.controller.TopicDeletionManager)
[2020-02-24 08:13:29,671] INFO [Topic Deletion Manager 0] Partition deletion callback for mysecond-0,mysecond-1,mysecond-2 (kafka.controller.TopicDeletionManager)
[2020-02-24 08:13:29,878] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=mysecond,Partition=0,Replica=0],false),StopReplicaRequestInfo([Topic=mysecond,Partition=1,Replica=0],false),StopReplicaRequestInfo([Topic=mysecond,Partition=2,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-24 08:13:29,880] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=mysecond,Partition=0,Replica=0],[Topic=mysecond,Partition=1,Replica=0],[Topic=mysecond,Partition=2,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-02-24 08:13:29,885] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=mysecond,Partition=0,Replica=0],true),StopReplicaRequestInfo([Topic=mysecond,Partition=1,Replica=0],true),StopReplicaRequestInfo([Topic=mysecond,Partition=2,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-24 08:13:29,900] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-02-24 08:13:29,901] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-02-24 08:13:29,902] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-02-24 08:13:29,903] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-02-24 08:13:29,907] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-02-24 08:13:29,927] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-02-24 08:13:30,696] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(mysecond-2 -> KAFKA_STORAGE_ERROR, mysecond-0 -> KAFKA_STORAGE_ERROR, mysecond-1 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2020-02-24 08:13:30,703] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=mysecond,Partition=2,Replica=0],[Topic=mysecond,Partition=0,Replica=0],[Topic=mysecond,Partition=1,Replica=0]. Halting deletion for topics Set(mysecond) (kafka.controller.TopicDeletionManager)
[2020-02-24 08:13:30,710] INFO [Topic Deletion Manager 0] Halted deletion of topics mysecond due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2020-02-24 08:13:30,710] INFO [Topic Deletion Manager 0] Handling deletion for topics mysecond (kafka.controller.TopicDeletionManager)
[2020-02-24 08:13:30,713] INFO [Topic Deletion Manager 0] Retrying deletion of topic mysecond since replicas [Topic=mysecond,Partition=0,Replica=0],[Topic=mysecond,Partition=1,Replica=0],[Topic=mysecond,Partition=2,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2020-02-24 08:14:10,780] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-02-24 08:15:18,569] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-24 08:15:18,642] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2020-02-24 08:15:18,643] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-02-24 08:15:18,652] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-02-24 08:15:18,661] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-02-24 08:15:18,667] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-02-24 08:15:18,738] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 24) (kafka.controller.KafkaController)
[2020-02-24 08:15:18,759] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-02-24 08:15:18,771] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-02-24 08:15:18,789] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-02-24 08:15:18,790] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-02-24 08:15:18,791] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-02-24 08:15:18,792] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-02-24 08:15:18,792] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-02-24 08:15:18,798] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-02-24 08:15:18,799] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-02-24 08:15:18,800] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-02-24 08:15:18,801] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-02-24 08:15:18,802] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-02-24 08:15:18,820] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 08:15:18,822] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 08:15:18,832] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 08:15:18,833] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 08:15:18,835] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 08:15:18,836] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 08:15:18,836] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-24 08:15:18,866] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 08:15:18,877] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-02-24 08:15:18,898] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-02-24 08:15:18,900] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-02-24 08:15:18,902] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-02-24 08:15:18,903] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-02-24 08:15:18,905] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-02-24 08:15:18,949] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-02-24 08:15:23,970] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 08:15:23,971] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 08:15:23,976] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-02-24 08:20:11,500] INFO [Controller id=0] New topics: [Set(myfirst)], deleted topics: [Set()], new partition replica assignment [Map(myfirst-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), myfirst-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), myfirst-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-02-24 08:20:11,503] INFO [Controller id=0] New partition creation callback for myfirst-0,myfirst-1,myfirst-2 (kafka.controller.KafkaController)
[2020-02-24 08:20:23,989] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 08:20:23,990] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 08:20:23,991] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> Map(myfirst-0 -> List(0), myfirst-1 -> List(0), myfirst-2 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 08:20:23,999] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-24 08:20:24,002] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 08:25:24,012] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 08:25:24,012] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 08:25:24,013] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> Map(myfirst-0 -> List(0), myfirst-1 -> List(0), myfirst-2 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 08:25:24,013] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-24 08:25:24,013] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 08:27:04,967] INFO [Controller id=0] New topics: [Set(myjob)], deleted topics: [Set()], new partition replica assignment [Map(myjob-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-02-24 08:27:04,967] INFO [Controller id=0] New partition creation callback for myjob-0 (kafka.controller.KafkaController)
[2020-02-24 08:30:24,024] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 08:30:24,024] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 08:30:24,025] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> Map(myfirst-0 -> List(0), myfirst-1 -> List(0), myfirst-2 -> List(0), myjob-0 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 08:30:24,025] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-24 08:30:24,025] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 08:35:24,035] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 08:35:24,035] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 08:35:24,041] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> Map(myfirst-0 -> List(0), myfirst-1 -> List(0), myfirst-2 -> List(0), myjob-0 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 08:35:24,041] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-24 08:35:24,041] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 08:40:24,051] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 08:40:24,052] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 08:40:24,053] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> Map(myfirst-0 -> List(0), myfirst-1 -> List(0), myfirst-2 -> List(0), myjob-0 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 08:40:24,053] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-24 08:40:24,053] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 08:45:24,063] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 08:45:24,063] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 08:45:24,064] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> Map(myfirst-0 -> List(0), myfirst-1 -> List(0), myfirst-2 -> List(0), myjob-0 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 08:45:24,064] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-24 08:45:24,064] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 08:50:24,073] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 08:50:24,073] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 08:50:24,074] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> Map(myfirst-0 -> List(0), myfirst-1 -> List(0), myfirst-2 -> List(0), myjob-0 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 08:50:24,074] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-24 08:50:24,074] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 08:55:24,074] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 08:55:24,074] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 08:55:24,075] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> Map(myfirst-0 -> List(0), myfirst-1 -> List(0), myfirst-2 -> List(0), myjob-0 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 08:55:24,075] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-24 08:55:24,075] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 09:00:24,085] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 09:00:24,090] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 09:00:24,091] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> Map(myfirst-0 -> List(0), myfirst-1 -> List(0), myfirst-2 -> List(0), myjob-0 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 09:00:24,092] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-24 09:00:24,092] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 09:05:24,102] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 09:05:24,102] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 09:05:24,103] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> Map(myfirst-0 -> List(0), myfirst-1 -> List(0), myfirst-2 -> List(0), myjob-0 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 09:05:24,103] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-24 09:05:24,103] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 09:10:24,113] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 09:10:24,113] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 09:10:24,114] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> Map(myfirst-0 -> List(0), myfirst-1 -> List(0), myfirst-2 -> List(0), myjob-0 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 09:10:24,114] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-24 09:10:24,114] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 09:13:07,261] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-02-24 09:13:07,269] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2020-02-24 09:13:07,548] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-24 09:15:24,124] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 09:15:24,124] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 09:15:24,127] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), myfirst-1 -> List(0), myjob-0 -> List(0), __consumer_offsets-22 -> List(0), myfirst-2 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), myfirst-0 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 09:15:24,128] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-02-24 09:15:24,128] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 09:20:24,137] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 09:20:24,137] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 09:20:24,141] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), myfirst-1 -> List(0), myjob-0 -> List(0), __consumer_offsets-22 -> List(0), myfirst-2 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), myfirst-0 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 09:20:24,143] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-02-24 09:20:24,143] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 09:25:24,153] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 09:25:24,153] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 09:25:24,156] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), myfirst-1 -> List(0), myjob-0 -> List(0), __consumer_offsets-22 -> List(0), myfirst-2 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), myfirst-0 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 09:25:24,157] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-02-24 09:25:24,157] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 09:30:24,167] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 09:30:24,167] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 09:30:24,170] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), myfirst-1 -> List(0), myjob-0 -> List(0), __consumer_offsets-22 -> List(0), myfirst-2 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), myfirst-0 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 09:30:24,171] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-02-24 09:30:24,171] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 09:35:24,181] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 09:35:24,181] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 09:35:24,184] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), myfirst-1 -> List(0), myjob-0 -> List(0), __consumer_offsets-22 -> List(0), myfirst-2 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), myfirst-0 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 09:35:24,185] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-02-24 09:35:24,185] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 09:40:24,195] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 09:40:24,195] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 09:40:24,197] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), myfirst-1 -> List(0), myjob-0 -> List(0), __consumer_offsets-22 -> List(0), myfirst-2 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), myfirst-0 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 09:40:24,197] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-02-24 09:40:24,198] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 09:45:24,207] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 09:45:24,207] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 09:45:24,209] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), myfirst-1 -> List(0), myjob-0 -> List(0), __consumer_offsets-22 -> List(0), myfirst-2 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), myfirst-0 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 09:45:24,209] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-02-24 09:45:24,210] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 09:50:24,219] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 09:50:24,219] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 09:50:24,220] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), myfirst-1 -> List(0), myjob-0 -> List(0), __consumer_offsets-22 -> List(0), myfirst-2 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), myfirst-0 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 09:50:24,220] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-02-24 09:50:24,221] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 09:55:24,230] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 09:55:24,230] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 09:55:24,232] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), myfirst-1 -> List(0), myjob-0 -> List(0), __consumer_offsets-22 -> List(0), myfirst-2 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), myfirst-0 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 09:55:24,232] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-02-24 09:55:24,232] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 10:00:24,242] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 10:00:24,244] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 10:00:24,246] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), myfirst-1 -> List(0), myjob-0 -> List(0), __consumer_offsets-22 -> List(0), myfirst-2 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), myfirst-0 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 10:00:24,246] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-02-24 10:00:24,246] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 10:05:24,257] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 10:05:24,257] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 10:05:24,259] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), myfirst-1 -> List(0), myjob-0 -> List(0), __consumer_offsets-22 -> List(0), myfirst-2 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), myfirst-0 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 10:05:24,259] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-02-24 10:05:24,259] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 10:10:24,269] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 10:10:24,269] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 10:10:24,270] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), myfirst-1 -> List(0), myjob-0 -> List(0), __consumer_offsets-22 -> List(0), myfirst-2 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), myfirst-0 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 10:10:24,270] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-02-24 10:10:24,270] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 10:15:24,283] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 10:15:24,283] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 10:15:24,284] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), myfirst-1 -> List(0), myjob-0 -> List(0), __consumer_offsets-22 -> List(0), myfirst-2 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), myfirst-0 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 10:15:24,285] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-02-24 10:15:24,285] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 10:20:24,294] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 10:20:24,294] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 10:20:24,295] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), myfirst-1 -> List(0), myjob-0 -> List(0), __consumer_offsets-22 -> List(0), myfirst-2 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), myfirst-0 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 10:20:24,296] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-02-24 10:20:24,296] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 10:25:24,306] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 10:25:24,306] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 10:25:24,307] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), myfirst-1 -> List(0), myjob-0 -> List(0), __consumer_offsets-22 -> List(0), myfirst-2 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), myfirst-0 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 10:25:24,307] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-02-24 10:25:24,307] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 10:30:24,317] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 10:30:24,317] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 10:30:24,318] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), myfirst-1 -> List(0), myjob-0 -> List(0), __consumer_offsets-22 -> List(0), myfirst-2 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), myfirst-0 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 10:30:24,318] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-02-24 10:30:24,318] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 10:35:24,325] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 10:35:24,325] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 10:35:24,326] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), myfirst-1 -> List(0), myjob-0 -> List(0), __consumer_offsets-22 -> List(0), myfirst-2 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), myfirst-0 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 10:35:24,326] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-02-24 10:35:24,326] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 10:40:24,336] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 10:40:24,336] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 10:40:24,337] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), myfirst-1 -> List(0), myjob-0 -> List(0), __consumer_offsets-22 -> List(0), myfirst-2 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), myfirst-0 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 10:40:24,337] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-02-24 10:40:24,337] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 10:45:24,347] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 10:45:24,347] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 10:45:24,348] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), myfirst-1 -> List(0), myjob-0 -> List(0), __consumer_offsets-22 -> List(0), myfirst-2 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), myfirst-0 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 10:45:24,348] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-02-24 10:45:24,348] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 10:50:24,357] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 10:50:24,357] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 10:50:24,358] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), myfirst-1 -> List(0), myjob-0 -> List(0), __consumer_offsets-22 -> List(0), myfirst-2 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), myfirst-0 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 10:50:24,358] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-02-24 10:50:24,358] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 10:55:24,359] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 10:55:24,360] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 10:55:24,361] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), myfirst-1 -> List(0), myjob-0 -> List(0), __consumer_offsets-22 -> List(0), myfirst-2 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), myfirst-0 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 10:55:24,363] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-02-24 10:55:24,364] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 11:00:24,373] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 11:00:24,375] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 11:00:24,376] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), myfirst-1 -> List(0), myjob-0 -> List(0), __consumer_offsets-22 -> List(0), myfirst-2 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), myfirst-0 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 11:00:24,376] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-02-24 11:00:24,377] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-24 11:05:24,386] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 11:05:24,386] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 11:05:24,387] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), myfirst-1 -> List(0), myjob-0 -> List(0), __consumer_offsets-22 -> List(0), myfirst-2 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), myfirst-0 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0))) (kafka.controller.KafkaController)
[2020-02-24 11:05:24,387] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-02-24 11:05:24,387] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
