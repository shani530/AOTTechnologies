[2020-02-23 21:33:43,402] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-02-23 22:00:39,326] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-23 22:00:39,463] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2020-02-23 22:00:39,464] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-02-23 22:00:39,472] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-02-23 22:00:39,485] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-02-23 22:00:39,489] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-02-23 22:00:39,757] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 24) (kafka.controller.KafkaController)
[2020-02-23 22:00:39,762] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-02-23 22:00:39,811] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-02-23 22:00:39,918] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-02-23 22:00:39,922] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-02-23 22:00:39,923] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-02-23 22:00:39,925] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-02-23 22:00:39,926] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-02-23 22:00:39,940] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-02-23 22:00:39,942] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-02-23 22:00:39,943] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-02-23 22:00:39,945] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-02-23 22:00:39,947] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-02-23 22:00:39,979] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-02-23 22:00:39,980] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-23 22:00:40,064] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-23 22:00:40,066] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2020-02-23 22:00:40,068] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-02-23 22:00:40,071] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-02-23 22:00:40,104] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2020-02-23 22:00:40,105] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-02-23 22:00:40,120] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-02-23 22:00:40,121] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-02-23 22:00:40,122] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-02-23 22:00:40,123] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-02-23 22:00:40,176] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-02-23 22:00:40,263] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-02-23 22:00:40,269] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-23 22:00:45,266] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-23 22:00:45,267] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-23 22:00:45,271] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-02-23 22:05:45,279] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-23 22:05:45,279] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-23 22:05:45,280] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-02-23 22:10:45,294] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-23 22:10:45,294] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-23 22:10:45,294] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-02-23 22:11:33,857] INFO [Controller id=0] New topics: [Set(myfirst)], deleted topics: [Set()], new partition replica assignment [Map(myfirst-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), myfirst-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), myfirst-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-02-23 22:11:33,859] INFO [Controller id=0] New partition creation callback for myfirst-0,myfirst-1,myfirst-2 (kafka.controller.KafkaController)
[2020-02-23 22:11:33,989] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-23 22:12:22,944] INFO [Controller id=0] New topics: [Set(mysecond)], deleted topics: [Set()], new partition replica assignment [Map(mysecond-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), mysecond-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), mysecond-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-02-23 22:12:22,944] INFO [Controller id=0] New partition creation callback for mysecond-0,mysecond-1,mysecond-2 (kafka.controller.KafkaController)
[2020-02-23 22:15:40,365] DEBUG [Controller id=0] Delete topics listener fired for topics mysecond to be deleted (kafka.controller.KafkaController)
[2020-02-23 22:15:40,366] INFO [Controller id=0] Starting topic deletion for topics mysecond (kafka.controller.KafkaController)
[2020-02-23 22:15:40,368] INFO [Topic Deletion Manager 0] Handling deletion for topics mysecond (kafka.controller.TopicDeletionManager)
[2020-02-23 22:15:40,374] INFO [Topic Deletion Manager 0] Deletion of topic mysecond (re)started (kafka.controller.TopicDeletionManager)
[2020-02-23 22:15:40,376] INFO [Topic Deletion Manager 0] Topic deletion callback for mysecond (kafka.controller.TopicDeletionManager)
[2020-02-23 22:15:40,391] INFO [Topic Deletion Manager 0] Partition deletion callback for mysecond-0,mysecond-1,mysecond-2 (kafka.controller.TopicDeletionManager)
[2020-02-23 22:15:40,487] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=mysecond,Partition=0,Replica=0],false),StopReplicaRequestInfo([Topic=mysecond,Partition=1,Replica=0],false),StopReplicaRequestInfo([Topic=mysecond,Partition=2,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-23 22:15:40,490] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=mysecond,Partition=0,Replica=0],[Topic=mysecond,Partition=1,Replica=0],[Topic=mysecond,Partition=2,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-02-23 22:15:40,494] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=mysecond,Partition=0,Replica=0],true),StopReplicaRequestInfo([Topic=mysecond,Partition=1,Replica=0],true),StopReplicaRequestInfo([Topic=mysecond,Partition=2,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-23 22:15:40,674] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(mysecond-2 -> KAFKA_STORAGE_ERROR, mysecond-0 -> KAFKA_STORAGE_ERROR, mysecond-1 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2020-02-23 22:15:40,679] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=mysecond,Partition=2,Replica=0],[Topic=mysecond,Partition=0,Replica=0],[Topic=mysecond,Partition=1,Replica=0]. Halting deletion for topics Set(mysecond) (kafka.controller.TopicDeletionManager)
[2020-02-23 22:15:40,685] INFO [Topic Deletion Manager 0] Halted deletion of topics mysecond due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2020-02-23 22:15:40,685] INFO [Topic Deletion Manager 0] Handling deletion for topics mysecond (kafka.controller.TopicDeletionManager)
[2020-02-23 22:15:40,686] INFO [Topic Deletion Manager 0] Retrying deletion of topic mysecond since replicas [Topic=mysecond,Partition=0,Replica=0],[Topic=mysecond,Partition=1,Replica=0],[Topic=mysecond,Partition=2,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2020-02-23 22:27:20,969] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-23 22:27:21,068] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2020-02-23 22:27:21,068] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-02-23 22:27:21,079] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-02-23 22:27:21,094] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-02-23 22:27:21,108] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-02-23 22:27:21,137] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 91) (kafka.controller.KafkaController)
[2020-02-23 22:27:21,154] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-02-23 22:27:21,190] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-02-23 22:27:21,209] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-02-23 22:27:21,210] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-02-23 22:27:21,211] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-02-23 22:27:21,212] INFO [Controller id=0] Current list of topics in the cluster: Set(myfirst, mysecond) (kafka.controller.KafkaController)
[2020-02-23 22:27:21,213] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-02-23 22:27:21,225] INFO [Controller id=0] List of topics to be deleted: mysecond (kafka.controller.KafkaController)
[2020-02-23 22:27:21,226] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-02-23 22:27:21,227] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-02-23 22:27:21,228] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(mysecond), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-02-23 22:27:21,229] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-02-23 22:27:21,248] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-02-23 22:27:21,259] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-23 22:27:21,278] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-23 22:27:21,338] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-23 22:27:21,340] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=mysecond,Partition=2,Replica=0] -> OnlineReplica, [Topic=mysecond,Partition=1,Replica=0] -> OnlineReplica, [Topic=mysecond,Partition=0,Replica=0] -> OnlineReplica, [Topic=myfirst,Partition=1,Replica=0] -> OnlineReplica, [Topic=myfirst,Partition=2,Replica=0] -> OnlineReplica, [Topic=myfirst,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-02-23 22:27:21,341] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-02-23 22:27:21,387] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-02-23 22:27:21,397] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(mysecond-2 -> OfflinePartition, myfirst-2 -> OnlinePartition, myfirst-1 -> OnlinePartition, myfirst-0 -> OnlinePartition, mysecond-0 -> OfflinePartition, mysecond-1 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-02-23 22:27:21,398] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2020-02-23 22:27:21,414] INFO [Topic Deletion Manager 0] Handling deletion for topics mysecond (kafka.controller.TopicDeletionManager)
[2020-02-23 22:27:21,422] INFO [Topic Deletion Manager 0] Deletion of topic mysecond (re)started (kafka.controller.TopicDeletionManager)
[2020-02-23 22:27:21,423] INFO [Topic Deletion Manager 0] Topic deletion callback for mysecond (kafka.controller.TopicDeletionManager)
[2020-02-23 22:27:21,473] INFO [Topic Deletion Manager 0] Partition deletion callback for mysecond-0,mysecond-1,mysecond-2 (kafka.controller.TopicDeletionManager)
[2020-02-23 22:27:21,642] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=mysecond,Partition=0,Replica=0],false),StopReplicaRequestInfo([Topic=mysecond,Partition=1,Replica=0],false),StopReplicaRequestInfo([Topic=mysecond,Partition=2,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-23 22:27:21,643] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=mysecond,Partition=0,Replica=0],[Topic=mysecond,Partition=1,Replica=0],[Topic=mysecond,Partition=2,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-02-23 22:27:21,647] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=mysecond,Partition=0,Replica=0],true),StopReplicaRequestInfo([Topic=mysecond,Partition=1,Replica=0],true),StopReplicaRequestInfo([Topic=mysecond,Partition=2,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-23 22:27:21,692] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-02-23 22:27:21,693] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-02-23 22:27:21,695] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-02-23 22:27:21,697] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-02-23 22:27:21,701] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-02-23 22:27:21,735] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-02-23 22:27:22,276] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(mysecond-2 -> KAFKA_STORAGE_ERROR, mysecond-0 -> KAFKA_STORAGE_ERROR, mysecond-1 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2020-02-23 22:27:22,279] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=mysecond,Partition=2,Replica=0],[Topic=mysecond,Partition=0,Replica=0],[Topic=mysecond,Partition=1,Replica=0]. Halting deletion for topics Set(mysecond) (kafka.controller.TopicDeletionManager)
[2020-02-23 22:27:22,283] INFO [Topic Deletion Manager 0] Halted deletion of topics mysecond due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2020-02-23 22:27:22,284] INFO [Topic Deletion Manager 0] Handling deletion for topics mysecond (kafka.controller.TopicDeletionManager)
[2020-02-23 22:27:22,285] INFO [Topic Deletion Manager 0] Retrying deletion of topic mysecond since replicas [Topic=mysecond,Partition=0,Replica=0],[Topic=mysecond,Partition=1,Replica=0],[Topic=mysecond,Partition=2,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2020-02-23 22:27:22,298] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=mysecond,Partition=0,Replica=0],false),StopReplicaRequestInfo([Topic=mysecond,Partition=1,Replica=0],false),StopReplicaRequestInfo([Topic=mysecond,Partition=2,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
