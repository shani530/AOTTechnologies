[2020-03-16 09:41:56,393] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-03-16 09:42:50,886] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-03-16 09:42:50,889] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-03-16 09:42:51,232] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 7 and epoch zk version is now 7 (kafka.controller.KafkaController)
[2020-03-16 09:42:51,233] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-03-16 09:42:51,304] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-03-16 09:42:51,323] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-03-16 09:42:51,342] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-03-16 09:42:51,348] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-03-16 09:42:51,454] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 756, 1 -> 757) (kafka.controller.KafkaController)
[2020-03-16 09:42:51,518] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0, 1) (kafka.controller.KafkaController)
[2020-03-16 09:42:51,801] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-03-16 09:42:51,949] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-03-16 09:42:51,962] INFO [Controller id=0] Currently active brokers in the cluster: Set(0, 1) (kafka.controller.KafkaController)
[2020-03-16 09:42:51,963] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-03-16 09:42:51,964] INFO [Controller id=0] Current list of topics in the cluster: Set(nse-eod-topic, __consumer_offsets, hello-producer-topic) (kafka.controller.KafkaController)
[2020-03-16 09:42:51,965] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-03-16 09:42:51,980] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-03-16 09:42:51,994] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-03-16 09:42:52,107] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-03-16 09:42:52,108] INFO [Controller id=0] List of topics ineligible for deletion: nse-eod-topic,__consumer_offsets,hello-producer-topic (kafka.controller.KafkaController)
[2020-03-16 09:42:52,110] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-03-16 09:42:52,112] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(nse-eod-topic, __consumer_offsets, hello-producer-topic) (kafka.controller.TopicDeletionManager)
[2020-03-16 09:42:52,113] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-03-16 09:42:52,140] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-03-16 09:42:52,252] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-16 09:42:52,334] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-16 09:42:52,445] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-16 09:42:52,447] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-16 09:42:52,897] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=hello-producer-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=4,Replica=1] -> OnlineReplica, [Topic=hello-producer-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=hello-producer-topic,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=nse-eod-topic,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=nse-eod-topic,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OfflineReplica, [Topic=nse-eod-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic,Partition=2,Replica=1] -> OnlineReplica, [Topic=hello-producer-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=nse-eod-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=nse-eod-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=nse-eod-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=hello-producer-topic,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=nse-eod-topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=nse-eod-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=nse-eod-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=hello-producer-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica, [Topic=nse-eod-topic,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-03-16 09:42:52,899] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-03-16 09:42:52,908] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-03-16 09:42:54,203] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(nse-eod-topic-1 -> OnlinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OfflinePartition, hello-producer-topic-2 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, nse-eod-topic-4 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OfflinePartition, hello-producer-topic-3 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, nse-eod-topic-0 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, nse-eod-topic-3 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OnlinePartition, hello-producer-topic-4 -> OnlinePartition, hello-producer-topic-0 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, nse-eod-topic-2 -> OnlinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, hello-producer-topic-1 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-03-16 09:42:54,204] INFO [Controller id=0] Ready to serve as the new controller with epoch 7 (kafka.controller.KafkaController)
[2020-03-16 09:42:54,422] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-03-16 09:42:54,423] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-03-16 09:42:54,423] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-03-16 09:42:54,424] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-03-16 09:42:54,445] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-03-16 09:42:54,649] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-03-16 09:42:55,182] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-03-16 09:42:55,184] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-03-16 09:42:55,198] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-03-16 09:42:55,250] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-03-16 09:42:55,254] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-16 09:42:55,433] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-03-16 09:42:55,481] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2020-03-16 09:42:55,505] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 756, 1 -> 757, 2 -> 793) (kafka.controller.KafkaController)
[2020-03-16 09:42:55,540] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-03-16 09:42:59,654] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-16 09:42:59,655] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-16 09:42:59,664] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(hello-producer-topic-4 -> List(0, 1, 2), __consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), nse-eod-topic-4 -> List(0, 2, 1), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), nse-eod-topic-1 -> List(0, 1, 2), __consumer_offsets-48 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), hello-producer-topic-1 -> List(0, 2, 1), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-25 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-37 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), __consumer_offsets-16 -> List(1), hello-producer-topic-2 -> List(1, 0, 2), __consumer_offsets-28 -> List(1), __consumer_offsets-19 -> List(1), nse-eod-topic-2 -> List(1, 2, 0), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(hello-producer-topic-3 -> List(2, 0, 1), __consumer_offsets-8 -> List(2), nse-eod-topic-0 -> List(2, 0, 1), __consumer_offsets-35 -> List(2), hello-producer-topic-0 -> List(2, 1, 0), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-11 -> List(2), nse-eod-topic-3 -> List(2, 1, 0), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-16 09:42:59,667] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-16 09:42:59,670] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 09:42:59,670] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-16 09:42:59,670] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 09:42:59,671] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(hello-producer-topic-3 -> List(2, 0, 1), nse-eod-topic-0 -> List(2, 0, 1), hello-producer-topic-0 -> List(2, 1, 0), nse-eod-topic-3 -> List(2, 1, 0)) (kafka.controller.KafkaController)
[2020-03-16 09:42:59,671] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.2 (kafka.controller.KafkaController)
[2020-03-16 09:42:59,776] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions hello-producer-topic-3,nse-eod-topic-0,hello-producer-topic-0,nse-eod-topic-3 triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-03-16 09:42:59,820] ERROR [Controller id=0] Error completing replica leader election (PREFERRED) for partition hello-producer-topic-0 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition hello-producer-topic-0 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:764)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:1135)
	at scala.collection.immutable.HashMap.foreach(HashMap.scala:1049)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1116)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1144)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-03-16 09:42:59,822] ERROR [Controller id=0] Error completing replica leader election (PREFERRED) for partition nse-eod-topic-3 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition nse-eod-topic-3 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:764)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:1135)
	at scala.collection.immutable.HashMap.foreach(HashMap.scala:1049)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1116)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1144)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-03-16 09:42:59,824] INFO [Controller id=0] Partition hello-producer-topic-3 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-03-16 09:42:59,824] INFO [Controller id=0] Partition nse-eod-topic-0 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-03-16 09:42:59,825] WARN [Controller id=0] Partition hello-producer-topic-0 failed to complete preferred replica leader election to 2. Leader is still 1 (kafka.controller.KafkaController)
[2020-03-16 09:42:59,825] WARN [Controller id=0] Partition nse-eod-topic-3 failed to complete preferred replica leader election to 2. Leader is still 1 (kafka.controller.KafkaController)
[2020-03-16 09:43:04,588] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: List(0, 1, 2) for TopicPartitions: ArrayBuffer(nse-eod-topic-1, hello-producer-topic-1, hello-producer-topic-3, hello-producer-topic-4, nse-eod-topic-4, nse-eod-topic-0) (kafka.controller.KafkaController)
[2020-03-16 09:43:07,053] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: List(0, 1, 2) for TopicPartitions: ArrayBuffer(hello-producer-topic-0, hello-producer-topic-2, nse-eod-topic-2, nse-eod-topic-3) (kafka.controller.KafkaController)
[2020-03-16 09:43:19,236] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 8 and epoch zk version is now 8 (kafka.controller.KafkaController)
[2020-03-16 09:43:19,237] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2020-03-16 09:43:19,245] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-03-16 09:43:19,257] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-03-16 09:43:19,260] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2020-03-16 09:43:19,268] INFO [Controller id=2] Initialized broker epochs cache: Map(2 -> 793) (kafka.controller.KafkaController)
[2020-03-16 09:43:19,284] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2020-03-16 09:43:19,337] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-03-16 09:43:19,352] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-03-16 09:43:19,353] INFO [Controller id=2] Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController)
[2020-03-16 09:43:19,353] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-03-16 09:43:19,354] INFO [Controller id=2] Current list of topics in the cluster: Set(nse-eod-topic, __consumer_offsets, hello-producer-topic) (kafka.controller.KafkaController)
[2020-03-16 09:43:19,354] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-03-16 09:43:19,363] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-03-16 09:43:19,364] INFO [Controller id=2] List of topics ineligible for deletion: nse-eod-topic,__consumer_offsets,hello-producer-topic (kafka.controller.KafkaController)
[2020-03-16 09:43:19,364] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-03-16 09:43:19,365] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(nse-eod-topic, __consumer_offsets, hello-producer-topic) (kafka.controller.TopicDeletionManager)
[2020-03-16 09:43:19,366] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2020-03-16 09:43:19,379] INFO [RequestSendThread controllerId=2] Controller 2 connected to DELL-PC:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-16 09:43:19,380] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-03-16 09:43:19,392] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-16 09:43:19,450] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-16 09:43:19,772] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OfflineReplica, [Topic=hello-producer-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OfflineReplica, [Topic=nse-eod-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=hello-producer-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=nse-eod-topic,Partition=3,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OfflineReplica, [Topic=hello-producer-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OfflineReplica, [Topic=nse-eod-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OnlineReplica, [Topic=nse-eod-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OfflineReplica, [Topic=nse-eod-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OfflineReplica, [Topic=hello-producer-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OnlineReplica, [Topic=nse-eod-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=nse-eod-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic,Partition=2,Replica=0] -> OfflineReplica, [Topic=hello-producer-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=hello-producer-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OfflineReplica, [Topic=nse-eod-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=nse-eod-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=nse-eod-topic,Partition=2,Replica=0] -> OfflineReplica, [Topic=hello-producer-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OnlineReplica, [Topic=hello-producer-topic,Partition=3,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OfflineReplica, [Topic=nse-eod-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OfflineReplica, [Topic=nse-eod-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OfflineReplica, [Topic=nse-eod-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OnlineReplica, [Topic=nse-eod-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=hello-producer-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OfflineReplica, [Topic=nse-eod-topic,Partition=0,Replica=0] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-03-16 09:43:19,773] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-03-16 09:43:19,783] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-03-16 09:43:20,043] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap(nse-eod-topic-1 -> OnlinePartition, __consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, hello-producer-topic-2 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, nse-eod-topic-4 -> OnlinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OnlinePartition, hello-producer-topic-3 -> OnlinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, nse-eod-topic-0 -> OnlinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, nse-eod-topic-3 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OfflinePartition, hello-producer-topic-4 -> OnlinePartition, hello-producer-topic-0 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, nse-eod-topic-2 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, hello-producer-topic-1 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-03-16 09:43:20,044] INFO [Controller id=2] Ready to serve as the new controller with epoch 8 (kafka.controller.KafkaController)
[2020-03-16 09:43:20,096] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-03-16 09:43:20,097] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-03-16 09:43:20,098] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-03-16 09:43:20,099] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-03-16 09:43:20,102] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-03-16 09:43:20,126] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-03-16 09:46:01,278] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-03-16 09:46:46,184] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-03-16 09:46:46,289] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2020-03-16 09:46:46,290] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-03-16 09:46:46,315] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-03-16 09:46:46,336] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-03-16 09:46:46,346] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-03-16 09:46:46,441] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 24) (kafka.controller.KafkaController)
[2020-03-16 09:46:46,453] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-03-16 09:46:46,472] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-03-16 09:46:46,538] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-03-16 09:46:46,540] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-03-16 09:46:46,541] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-03-16 09:46:46,542] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-03-16 09:46:46,552] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-03-16 09:46:46,572] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-03-16 09:46:46,573] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-03-16 09:46:46,574] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-03-16 09:46:46,575] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-03-16 09:46:46,576] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-03-16 09:46:46,610] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-03-16 09:46:46,616] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-16 09:46:46,638] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-16 09:46:46,639] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2020-03-16 09:46:46,641] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-03-16 09:46:46,648] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-03-16 09:46:46,661] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-16 09:46:46,664] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2020-03-16 09:46:46,665] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-03-16 09:46:46,692] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-03-16 09:46:46,693] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-03-16 09:46:46,694] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-03-16 09:46:46,695] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-03-16 09:46:46,698] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-03-16 09:46:46,801] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-03-16 09:46:51,806] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-16 09:46:51,807] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-16 09:46:51,809] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-03-16 09:47:01,796] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2020-03-16 09:47:01,797] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-03-16 09:47:01,833] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-03-16 09:47:01,848] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2020-03-16 09:47:01,852] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-16 09:47:01,860] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2020-03-16 09:47:01,898] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 24, 1 -> 43) (kafka.controller.KafkaController)
[2020-03-16 09:47:01,998] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-03-16 09:47:02,105] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-03-16 09:47:10,424] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-03-16 09:47:10,424] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-03-16 09:47:10,433] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-03-16 09:47:10,434] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-03-16 09:47:10,435] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2020-03-16 09:47:10,445] INFO [RequestSendThread controllerId=0] Controller 0 connected to DELL-PC:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-16 09:47:10,448] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 24, 1 -> 43, 2 -> 59) (kafka.controller.KafkaController)
[2020-03-16 09:47:10,616] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-03-16 09:47:10,671] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-03-16 09:47:27,732] INFO [Controller id=0] New topics: [Set(nse-eod-topic)], deleted topics: [Set()], new partition replica assignment [HashMap(nse-eod-topic-1 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), nse-eod-topic-2 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), nse-eod-topic-3 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), nse-eod-topic-4 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), nse-eod-topic-0 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-03-16 09:47:27,740] INFO [Controller id=0] New partition creation callback for nse-eod-topic-1,nse-eod-topic-2,nse-eod-topic-3,nse-eod-topic-4,nse-eod-topic-0 (kafka.controller.KafkaController)
[2020-03-16 09:47:37,299] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-03-16 09:47:37,300] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2020-03-16 09:51:51,820] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-16 09:51:51,821] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-16 09:51:51,825] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), nse-eod-topic-0 -> List(0, 2, 1), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), nse-eod-topic-3 -> List(0, 1, 2), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-4 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), nse-eod-topic-1 -> List(1, 0, 2), __consumer_offsets-37 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-11 -> List(2), nse-eod-topic-2 -> List(2, 1, 0), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-16 09:51:51,828] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-16 09:51:51,831] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 09:51:51,831] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-16 09:51:51,831] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 09:51:51,831] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-16 09:51:51,832] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 09:56:51,842] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-16 09:56:51,842] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-16 09:56:51,855] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), nse-eod-topic-0 -> List(0, 2, 1), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), nse-eod-topic-3 -> List(0, 1, 2), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-4 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), nse-eod-topic-1 -> List(1, 0, 2), __consumer_offsets-37 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-11 -> List(2), nse-eod-topic-2 -> List(2, 1, 0), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-16 09:56:51,855] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-16 09:56:51,855] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 09:56:51,855] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-16 09:56:51,855] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 09:56:51,856] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-16 09:56:51,856] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:01:51,867] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-16 10:01:51,869] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-16 10:01:51,875] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), nse-eod-topic-0 -> List(0, 2, 1), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), nse-eod-topic-3 -> List(0, 1, 2), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-4 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), nse-eod-topic-1 -> List(1, 0, 2), __consumer_offsets-37 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-11 -> List(2), nse-eod-topic-2 -> List(2, 1, 0), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-16 10:01:51,876] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:01:51,876] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:01:51,877] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:01:51,877] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:01:51,877] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:01:51,877] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:06:51,888] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-16 10:06:51,888] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-16 10:06:51,890] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), nse-eod-topic-0 -> List(0, 2, 1), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), nse-eod-topic-3 -> List(0, 1, 2), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-4 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), nse-eod-topic-1 -> List(1, 0, 2), __consumer_offsets-37 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-11 -> List(2), nse-eod-topic-2 -> List(2, 1, 0), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-16 10:06:51,891] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:06:51,891] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:06:51,891] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:06:51,891] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:06:51,891] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:06:51,891] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:11:51,903] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-16 10:11:51,903] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-16 10:11:51,905] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), nse-eod-topic-0 -> List(0, 2, 1), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), nse-eod-topic-3 -> List(0, 1, 2), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-4 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), nse-eod-topic-1 -> List(1, 0, 2), __consumer_offsets-37 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-11 -> List(2), nse-eod-topic-2 -> List(2, 1, 0), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-16 10:11:51,905] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:11:51,905] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:11:51,905] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:11:51,905] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:11:51,905] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:11:51,906] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:17:40,514] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-16 10:17:40,514] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-16 10:17:40,516] DEBUG [Controller id=0] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), nse-eod-topic-0 -> List(0, 2, 1), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), nse-eod-topic-3 -> List(0, 1, 2), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-4 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), nse-eod-topic-1 -> List(1, 0, 2), __consumer_offsets-37 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-11 -> List(2), nse-eod-topic-2 -> List(2, 1, 0), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-16 10:17:40,516] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:17:40,516] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:17:40,516] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:17:40,516] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:17:40,516] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:17:40,516] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:17:41,993] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-03-16 10:17:41,995] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0, 1, 2) (kafka.controller.KafkaController)
[2020-03-16 10:17:42,001] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-03-16 10:17:42,004] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-03-16 10:17:42,007] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-03-16 10:17:42,009] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-03-16 10:17:42,009] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-03-16 10:17:42,014] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-03-16 10:17:42,014] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-03-16 10:17:42,014] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-03-16 10:17:42,019] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-03-16 10:17:42,019] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-03-16 10:17:42,019] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-03-16 10:17:42,024] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-03-16 10:17:42,104] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2020-03-16 10:17:42,107] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-03-16 10:17:42,111] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-03-16 10:17:42,114] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-03-16 10:17:42,119] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2020-03-16 10:17:42,143] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-03-16 10:17:42,145] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-03-16 10:17:42,149] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-03-16 10:17:42,152] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-03-16 10:17:42,156] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-03-16 10:17:45,364] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2020-03-16 10:17:45,364] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-03-16 10:17:45,408] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-03-16 10:17:45,408] DEBUG [Controller id=0] Broker 1 was elected as controller instead of broker 0 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-03-16 10:17:45,420] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-03-16 10:17:45,490] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-03-16 10:17:45,528] DEBUG [Controller id=2] Broker 1 was elected as controller instead of broker 2 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-03-16 10:17:45,616] INFO [Controller id=1] Initialized broker epochs cache: Map(0 -> 187, 1 -> 188, 2 -> 189) (kafka.controller.KafkaController)
[2020-03-16 10:17:45,671] DEBUG [Controller id=1] Register BrokerModifications handler for Set(0, 1, 2) (kafka.controller.KafkaController)
[2020-03-16 10:17:45,907] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-03-16 10:17:45,931] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-03-16 10:17:45,961] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-03-16 10:17:45,985] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-03-16 10:17:45,986] INFO [Controller id=1] Currently active brokers in the cluster: Set(0, 1, 2) (kafka.controller.KafkaController)
[2020-03-16 10:17:45,988] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-03-16 10:17:45,988] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-03-16 10:17:45,989] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-03-16 10:17:45,990] INFO [Controller id=1] Current list of topics in the cluster: Set(nse-eod-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2020-03-16 10:17:45,991] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-03-16 10:17:46,043] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-03-16 10:17:46,044] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-03-16 10:17:46,044] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-03-16 10:17:46,046] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-03-16 10:17:46,047] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-03-16 10:17:46,076] INFO [RequestSendThread controllerId=1] Controller 1 connected to DELL-PC:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-16 10:17:46,076] INFO [RequestSendThread controllerId=1] Controller 1 connected to DELL-PC:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-16 10:17:46,078] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-03-16 10:17:46,081] INFO [RequestSendThread controllerId=1] Controller 1 connected to DELL-PC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-16 10:17:46,095] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-16 10:17:46,222] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-16 10:17:46,265] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=4,Replica=1] -> OnlineReplica, [Topic=nse-eod-topic,Partition=3,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OnlineReplica, [Topic=nse-eod-topic,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=nse-eod-topic,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OnlineReplica, [Topic=nse-eod-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=nse-eod-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=nse-eod-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=nse-eod-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=nse-eod-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=nse-eod-topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=nse-eod-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OnlineReplica, [Topic=nse-eod-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica, [Topic=nse-eod-topic,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-03-16 10:17:46,266] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-03-16 10:17:46,279] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-03-16 10:17:46,322] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(nse-eod-topic-1 -> OnlinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, nse-eod-topic-4 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, nse-eod-topic-0 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, nse-eod-topic-3 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, nse-eod-topic-2 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-03-16 10:17:46,323] INFO [Controller id=1] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2020-03-16 10:17:46,378] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-03-16 10:17:46,382] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-03-16 10:17:46,385] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-03-16 10:17:46,386] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-03-16 10:17:46,388] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-03-16 10:17:46,419] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-03-16 10:17:51,422] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-16 10:17:51,422] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-16 10:17:51,429] DEBUG [Controller id=1] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), nse-eod-topic-0 -> List(0, 2, 1), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), nse-eod-topic-3 -> List(0, 1, 2), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-4 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), nse-eod-topic-1 -> List(1, 0, 2), __consumer_offsets-37 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-11 -> List(2), nse-eod-topic-2 -> List(2, 1, 0), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-16 10:17:51,431] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:17:51,433] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:17:51,433] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:17:51,433] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:17:51,433] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:17:51,433] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:22:51,444] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-16 10:22:51,444] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-16 10:22:51,448] DEBUG [Controller id=1] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), nse-eod-topic-0 -> List(0, 2, 1), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), nse-eod-topic-3 -> List(0, 1, 2), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-4 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), nse-eod-topic-1 -> List(1, 0, 2), __consumer_offsets-37 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-11 -> List(2), nse-eod-topic-2 -> List(2, 1, 0), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-16 10:22:51,449] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:22:51,449] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:22:51,449] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:22:51,449] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:22:51,449] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:22:51,449] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:27:51,460] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-16 10:27:51,460] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-16 10:27:51,465] DEBUG [Controller id=1] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), nse-eod-topic-0 -> List(0, 2, 1), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), nse-eod-topic-3 -> List(0, 1, 2), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-4 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), nse-eod-topic-1 -> List(1, 0, 2), __consumer_offsets-37 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-11 -> List(2), nse-eod-topic-2 -> List(2, 1, 0), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-16 10:27:51,465] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:27:51,465] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:27:51,465] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:27:51,465] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:27:51,466] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:27:51,466] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:32:51,477] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-16 10:32:51,477] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-16 10:32:51,480] DEBUG [Controller id=1] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), nse-eod-topic-0 -> List(0, 2, 1), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), nse-eod-topic-3 -> List(0, 1, 2), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-4 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), nse-eod-topic-1 -> List(1, 0, 2), __consumer_offsets-37 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-11 -> List(2), nse-eod-topic-2 -> List(2, 1, 0), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-16 10:32:51,481] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:32:51,481] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:32:51,481] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:32:51,481] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:32:51,481] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:32:51,481] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:37:51,493] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-16 10:37:51,493] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-16 10:37:51,500] DEBUG [Controller id=1] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), nse-eod-topic-0 -> List(0, 2, 1), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), nse-eod-topic-3 -> List(0, 1, 2), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-4 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), nse-eod-topic-1 -> List(1, 0, 2), __consumer_offsets-37 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-11 -> List(2), nse-eod-topic-2 -> List(2, 1, 0), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-16 10:37:51,500] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:37:51,501] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:37:51,501] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:37:51,501] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:37:51,501] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:37:51,501] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:42:51,511] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-16 10:42:51,511] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-16 10:42:51,511] DEBUG [Controller id=1] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), nse-eod-topic-0 -> List(0, 2, 1), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), nse-eod-topic-3 -> List(0, 1, 2), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-4 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), nse-eod-topic-1 -> List(1, 0, 2), __consumer_offsets-37 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-11 -> List(2), nse-eod-topic-2 -> List(2, 1, 0), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-16 10:42:51,513] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:42:51,513] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:42:51,513] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:42:51,513] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:42:51,513] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:42:51,513] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:47:51,525] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-16 10:47:51,525] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-16 10:47:51,527] DEBUG [Controller id=1] Preferred replicas by broker HashMap(0 -> HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), nse-eod-topic-0 -> List(0, 2, 1), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-39 -> List(0), nse-eod-topic-3 -> List(0, 1, 2), __consumer_offsets-12 -> List(0)), 1 -> HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), nse-eod-topic-4 -> List(1, 2, 0), __consumer_offsets-25 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), nse-eod-topic-1 -> List(1, 0, 2), __consumer_offsets-37 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)), 2 -> HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-11 -> List(2), nse-eod-topic-2 -> List(2, 1, 0), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2))) (kafka.controller.KafkaController)
[2020-03-16 10:47:51,527] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:47:51,528] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:47:51,528] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:47:51,528] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-03-16 10:47:51,528] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2020-03-16 10:47:51,528] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
